!function(e,a){var t={fr:{PH:{"Jour de l'an":[1,1],"Vendredi saint":["easter",-2,["Moselle","Bas-Rhin","Haut-Rhin","Guadeloupe","Martinique","Polynésie française"]],"Lundi de Pâques":["easter",1],"Saint-Pierre-Chanel":[4,28,["Wallis-et-Futuna"]],"Fête du Travail":[5,1],"Fête de la Victoire":[5,8],"Abolition de l'esclavage (Martinique)":[5,22,["Martinique"]],"Abolition de l'esclavage (Guadeloupe)":[5,27,["Guadeloupe"]],"Jeudi de l'Ascension":["easter",39],"Lundi de Pentecôte":["easter",50],"Abolition de l'esclavage (Guyane)":[6,10,["Guyane"]],"Fête de l'autonomie":[6,29,["Polynésie française"]],"Fête nationale":[7,14],"Fête Victor Schoelcher":[7,21,["Guadeloupe","Martinique"]],"Fête du Territoire":[7,29,["Wallis-et-Futuna"]],Assomption:[8,15],"Fête de la citoyenneté":[9,24,["Nouvelle-Calédonie"]],Toussaint:[11,1],Armistice:[11,11],"Abolition de l'esclavage (Réunion)":[12,20,["Réunion"]],"Noël":[12,25],"Saint-Étienne ":[12,26,["Moselle","Bas-Rhin","Haut-Rhin"]]}},de:{PH:{Neujahrstag:[1,1],"Heilige Drei Könige":[1,6,["Baden-Württemberg","Bayern","Sachsen-Anhalt"]],"Tag der Arbeit":[5,1],Karfreitag:["easter",-2],Ostersonntag:["easter",0,["Brandenburg"]],Ostermontag:["easter",1],"Christi Himmelfahrt":["easter",39],Pfingstsonntag:["easter",49,["Brandenburg"]],Pfingstmontag:["easter",50],Fronleichnam:["easter",60,["Baden-Württemberg","Bayern","Hessen","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]],"Mariä Himmelfahrt":[8,15,["Saarland"]],"Tag der Deutschen Einheit":[10,3],Reformationstag:[10,31,["Brandenburg","Mecklenburg-Vorpommern","Sachsen","Sachsen-Anhalt","Thüringen"]],Allerheiligen:[11,1,["Baden-Württemberg","Bayern","Nordrhein-Westfalen","Rheinland-Pfalz","Saarland"]],"1. Weihnachtstag":[12,25],"2. Weihnachtstag":[12,26]},"Baden-Württemberg":{SH:[{name:"Osterferien",2005:[3,24,3,24,3,29,4,2],2006:[4,18,4,22],2007:[4,2,4,14],2008:[3,17,3,28],2009:[4,9,4,9,4,14,4,17],2010:[4,1,4,1,4,6,4,10],2011:[4,21,4,21,4,26,4,30],2012:[4,2,4,13],2013:[3,25,4,5],2014:[4,14,4,25],2015:[3,30,4,10],2016:[3,29,4,2],2017:[4,10,4,21]},{name:"Pfingstferien",2005:[5,17,5,28],2006:[5,29,6,10],2007:[5,29,6,9],2008:[5,13,5,23],2009:[5,25,6,6],2010:[5,25,6,5],2011:[6,14,6,25],2012:[5,29,6,9],2013:[5,21,6,1],2014:[6,10,6,21],2015:[5,26,6,6],2016:[5,17,5,28],2017:[6,6,6,16]},{name:"Sommerferien",2005:[7,28,9,10],2006:[8,3,9,16],2007:[7,26,9,8],2008:[7,24,9,6],2009:[7,30,9,12],2010:[7,29,9,11],2011:[7,28,9,10],2012:[7,26,9,8],2013:[7,25,9,7],2014:[7,31,9,13],2015:[7,30,9,12],2016:[7,28,9,10],2017:[7,27,9,9]},{name:"Herbstferien",2005:[11,2,11,4],2006:[10,30,11,3],2007:[10,29,11,3],2008:[10,27,10,31],2009:[10,26,10,31],2010:[11,2,11,6],2011:[10,31,10,31,11,2,11,4],2012:[10,29,11,2],2013:[10,28,10,30],2014:[10,27,10,30],2015:[11,2,11,6],2016:[11,2,11,4]},{name:"Weihnachtsferien",2005:[12,22,1,5],2006:[12,27,1,5],2007:[12,24,1,5],2008:[12,22,1,10],2009:[12,23,1,9],2010:[12,23,1,8],2011:[12,23,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,5],2015:[12,23,1,9],2016:[12,23,1,7]}]},"Mecklenburg-Vorpommern":{SH:[{name:"Winterferien",2010:[2,6,2,20],2011:[2,7,2,19],2012:[2,6,2,17],2013:[2,4,2,15],2014:[2,3,2,15],2015:[2,2,2,14],2016:[2,1,2,13],2017:[2,6,2,18]},{name:"Osterferien",2010:[3,29,4,7],2011:[4,16,4,27],2012:[4,2,4,11],2013:[3,25,4,3],2014:[4,14,4,23],2015:[3,30,4,8],2016:[3,21,3,30],2017:[4,10,4,19]},{name:"Pfingstferien",2010:[5,21,5,22],2011:[6,10,6,14],2012:[5,25,5,29],2013:[5,17,5,21],2014:[6,6,6,10],2015:[5,22,5,26],2016:[5,14,5,17],2017:[6,2,6,6]},{name:"Sommerferien",2010:[7,12,8,21],2011:[7,4,8,13],2012:[6,23,8,4],2013:[6,22,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2]},{name:"Herbstferien",2010:[10,18,10,23],2011:[10,17,10,21],2012:[10,1,10,5],2013:[10,14,10,19],2014:[10,20,10,25],2015:[10,24,10,30],2016:[10,24,10,28]},{name:"Weihnachtsferien",2010:[12,23,12,31],2011:[12,23,1,3],2012:[12,21,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,21,1,2],2016:[12,22,1,2]}]},Hessen:{SH:[{name:"Osterferien",2010:[3,29,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,29,4,9],2017:[4,3,4,15],2018:[3,26,4,7]},{name:"Sommerferien",2010:[7,5,8,14],2011:[6,27,8,5],2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,5],2016:[7,18,8,26],2017:[7,3,8,11]},{name:"Herbstferien",2010:[10,11,10,22],2011:[10,10,10,22],2012:[10,15,10,27],2013:[10,14,10,26],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,29],2017:[10,9,10,21]},{name:"Weihnachtsferien",2010:[12,20,1,7],2011:[12,21,1,6],2012:[12,24,1,12],2013:[12,23,1,11],2014:[12,22,1,10],2015:[12,23,1,9],2016:[12,22,1,7],2017:[12,24,1,13]}]},"Schleswig-Holstein":{SH:[{name:"Osterferien",2010:[4,3,4,17],2011:[4,15,4,30],2012:[3,30,4,13],2013:[3,25,4,9],2014:[4,16,5,2],2015:[4,1,4,17],2016:[3,24,4,9],2017:[4,7,4,21]},{name:"Sommerferien",2010:[7,12,8,21],2011:[7,4,8,13],2012:[6,25,8,4],2013:[6,24,8,3],2014:[7,14,8,23],2015:[7,20,8,29],2016:[7,25,9,3],2017:[7,24,9,2]},{name:"Pfingstferien",2011:[6,3,6,4],2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,10,10,22],2012:[10,4,10,19],2013:[10,4,10,18],2014:[10,13,10,25],2015:[10,19,10,31],2016:[10,17,10,29]},{name:"Weihnachtsferien",2010:[12,23,1,7],2011:[12,23,1,6],2012:[12,24,1,5],2013:[12,23,1,6],2014:[12,22,1,6],2015:[12,21,1,6],2016:[12,23,1,6]}]},Berlin:{SH:[{name:"Winterferien",2010:[2,1,2,6],2011:[1,31,2,5],2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,4]},{name:"Osterferien",2010:[3,31,4,10],2011:[4,18,4,30],2012:[4,2,4,14,4,30,4,30],2013:[3,25,4,6],2014:[4,14,4,26,5,2,5,2],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,14,5,14,5,25,5,25],2011:[6,3,6,3],2012:[5,18,5,18],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26]},{name:"Sommerferien",2010:[7,7,8,21],2011:[6,29,8,12],2012:[6,20,8,3],2013:[6,19,8,2],2014:[7,9,8,22],2015:[7,15,8,28],2016:[7,20,9,2],2017:[7,19,9,1]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,4,10,14],2012:[10,1,10,13],2013:[9,30,10,12],2014:[10,20,11,1],2015:[10,19,10,31],2016:[10,17,10,28]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3]}]},Saarland:{SH:[{name:"Winterferien",2010:[2,15,2,20],2011:[3,7,3,12],2012:[2,20,2,25],2013:[2,11,2,16],2014:[3,3,3,8],2015:[2,16,2,21]},{name:"Osterferien",2010:[3,29,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11]},{name:"Sommerferien",2010:[7,5,8,14],2011:[6,24,8,6],2012:[7,2,8,14],2013:[7,8,8,17],2014:[7,28,9,6],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,14]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,4,10,15],2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,20,10,31]},{name:"Weihnachtsferien",2010:[12,20,1,1],2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,20,1,4],2014:[12,22,1,7]}]},Bremen:{SH:[{name:"Winterferien",2010:[2,1,2,2],2011:[1,31,2,1],2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31]},{name:"Osterferien",2010:[3,19,4,6],2011:[4,16,4,30],2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,14,5,14,5,25,5,25],2011:[6,3,6,3,6,14,6,14],2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,7,8,17],2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2]},{name:"Herbstferien",2010:[10,9,10,23],2011:[10,17,10,29],2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15]},{name:"Weihnachtsferien",2010:[12,22,1,5],2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6]}]},Bayern:{SH:[{name:"Winterferien",2010:[2,15,2,20],2011:[3,7,3,11],2012:[2,20,2,24],2013:[2,11,2,15],2014:[3,3,3,7],2015:[2,16,2,20],2016:[2,8,2,12],2017:[2,27,3,3]},{name:"Osterferien",2010:[3,29,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,1],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,25,6,5],2011:[6,14,6,25],2012:[5,29,6,9],2013:[5,21,5,31],2014:[6,10,6,21],2015:[5,26,6,5],2016:[5,17,5,28],2017:[6,6,6,16]},{name:"Sommerferien",2010:[8,2,9,13],2011:[7,30,9,12],2012:[8,1,9,12],2013:[7,31,9,11],2014:[7,30,9,15],2015:[8,1,9,14],2016:[7,30,9,12],2017:[7,29,9,11]},{name:"Herbstferien",2010:[11,2,11,5],2011:[10,31,11,5],2012:[10,29,11,3],2013:[10,28,10,31],2014:[10,27,10,31],2015:[11,2,11,7],2016:[10,31,11,4]},{name:"Weihnachtsferien",2010:[12,24,1,7],2011:[12,27,1,5],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,24,1,5],2015:[12,24,1,5],2016:[12,24,1,5]}]},Niedersachsen:{SH:[{name:"Winterferien",2010:[2,1,2,2],2011:[1,31,2,1],2012:[1,30,1,31],2013:[1,31,2,1],2014:[1,30,1,31],2015:[2,2,2,3],2016:[1,28,1,29],2017:[1,30,1,31]},{name:"Osterferien",2010:[3,19,4,6],2011:[4,16,4,30],2012:[3,26,4,11,4,30,4,30],2013:[3,16,4,2],2014:[4,3,4,22,5,2,5,2],2015:[3,25,4,10],2016:[3,18,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,14,5,14,5,25,5,25],2011:[6,3,6,3,6,14,6,14],2012:[5,18,5,18,5,29,5,29],2013:[5,10,5,10,5,21,5,21],2014:[5,30,5,30,6,10,6,10],2015:[5,15,5,15,5,26,5,26],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26,6,6,6,6]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,7,8,17],2012:[7,23,8,31],2013:[6,27,8,7],2014:[7,31,9,10],2015:[7,23,9,2],2016:[6,23,8,3],2017:[6,22,8,2]},{name:"Herbstferien",2010:[10,9,10,23],2011:[10,17,10,29],2012:[10,22,11,3],2013:[10,4,10,18],2014:[10,27,11,8],2015:[10,19,10,31],2016:[10,4,10,15]},{name:"Weihnachtsferien",2010:[12,22,1,5],2011:[12,23,1,4],2012:[12,24,1,5],2013:[12,23,1,3],2014:[12,22,1,5],2015:[12,23,1,6],2016:[12,21,1,6]}]},"Nordrhein-Westfalen":{SH:[{name:"Osterferien",2010:[3,27,4,10],2011:[4,18,4,30],2012:[4,2,4,14],2013:[3,25,4,6],2014:[4,14,4,26],2015:[3,30,4,11],2016:[3,21,4,2],2017:[4,10,4,22]},{name:"Pfingstferien",2010:[5,25,5,25],2012:[5,29,5,29],2013:[5,21,5,21],2014:[6,10,6,10],2015:[5,26,5,26],2016:[5,17,5,17],2017:[6,6,6,6]},{name:"Sommerferien",2010:[7,15,8,27],2011:[7,25,9,6],2012:[7,9,8,21],2013:[7,22,9,3],2014:[7,7,8,19],2015:[6,29,8,11],2016:[7,11,8,23],2017:[7,17,8,29]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,24,11,5],2012:[10,8,10,20],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,21]},{name:"Weihnachtsferien",2010:[12,24,1,8],2011:[12,23,1,6],2012:[12,21,1,4],2013:[12,23,1,7],2014:[12,22,1,6],2015:[12,23,1,6],2016:[12,23,1,6]}]},Sachsen:{SH:[{name:"Winterferien",2010:[2,8,2,20],2011:[2,12,2,26],2012:[2,13,2,25],2013:[2,4,2,15],2014:[2,17,3,1],2015:[2,9,2,21],2016:[2,8,2,20],2017:[2,13,2,24]},{name:"Osterferien",2010:[4,1,4,10],2011:[4,22,4,30],2012:[4,6,4,14],2013:[3,29,4,6],2014:[4,18,4,26],2015:[4,2,4,11],2016:[3,25,4,2],2017:[4,13,4,22]},{name:"Pfingstferien",2010:[5,14,5,14],2011:[6,3,6,3],2012:[5,18,5,18],2013:[5,10,5,10,5,18,5,22],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26]},{name:"Sommerferien",2010:[6,28,8,6],2011:[7,11,8,19],2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,5],2017:[6,26,8,4]},{name:"Herbstferien",2010:[10,4,10,16],2011:[10,17,10,28],2012:[10,22,11,2],2013:[10,21,11,1],2014:[10,20,10,31],2015:[10,12,10,24],2016:[10,3,10,15]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,2],2012:[12,22,1,2],2013:[12,21,1,3],2014:[12,22,1,3],2015:[12,21,1,2],2016:[12,23,1,2]}]},"Thüringen":{SH:[{name:"Winterferien",2010:[2,1,2,6],2011:[1,31,2,5],2012:[2,6,2,11],2013:[2,18,2,23],2014:[2,17,2,22],2015:[2,2,2,7],2016:[2,1,2,6],2017:[2,6,2,11]},{name:"Osterferien",2010:[3,29,4,9],2011:[4,18,4,30],2012:[4,2,4,13],2013:[3,25,4,6],2014:[4,19,5,2],2015:[3,30,4,11],2016:[3,24,4,2],2017:[4,10,4,21]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,11,8,19],2012:[7,23,8,31],2013:[7,15,8,23],2014:[7,21,8,29],2015:[7,13,8,21],2016:[6,27,8,10],2017:[6,26,8,9]},{name:"Pfingstferien",2011:[6,11,6,14],2012:[5,25,5,29],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6],2017:[5,26,5,26]},{name:"Herbstferien",2010:[10,9,10,23],2011:[10,17,10,28],2012:[10,22,11,3],2013:[10,21,11,2],2014:[10,6,10,18],2015:[10,5,10,17],2016:[10,10,10,22]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,1],2012:[12,24,1,5],2013:[12,23,1,4],2014:[12,22,1,3],2015:[12,23,1,2],2016:[12,23,12,31]}]},Hamburg:{SH:[{name:"Winterferien",2010:[1,29,1,29],2011:[1,31,1,31],2012:[1,30,1,30],2013:[2,1,2,1],2014:[1,31,1,31],2015:[1,30,1,30],2016:[1,29,1,29],2017:[1,30,1,30]},{name:"Osterferien",2010:[3,8,3,20],2011:[3,7,3,18],2012:[3,5,3,16],2013:[3,4,3,15],2014:[3,3,3,14],2015:[3,2,3,13],2016:[3,7,3,18],2017:[3,6,3,17]},{name:"Pfingstferien",2010:[5,14,5,22],2011:[4,26,4,29,6,3,6,3],2012:[4,30,5,4,5,18,5,18],2013:[5,2,5,10],2014:[4,28,5,2,5,30,5,30],2015:[5,11,5,15],2016:[5,6,5,6,5,17,5,20],2017:[5,22,5,26]},{name:"Sommerferien",2010:[7,8,8,18],2011:[6,30,8,10],2012:[6,21,8,1],2013:[6,20,7,31],2014:[7,10,8,20],2015:[7,16,8,26],2016:[7,21,8,31],2017:[7,20,8,30]},{name:"Herbstferien",2010:[10,4,10,15],2011:[10,4,10,14],2012:[10,1,10,12],2013:[9,30,10,11],2014:[10,13,10,24],2015:[10,19,10,30],2016:[10,17,10,28]},{name:"Weihnachtsferien",2010:[12,23,1,3],2011:[12,27,1,6],2012:[12,21,1,4],2013:[12,19,1,3],2014:[12,22,1,6],2015:[12,21,1,1],2016:[12,27,1,6]}]},"Sachsen-Anhalt":{SH:[{name:"Winterferien",2010:[2,8,2,13],2011:[2,5,2,12],2012:[2,4,2,11],2013:[2,1,2,8],2014:[2,1,2,12],2015:[2,2,2,14],2016:[2,1,2,10],2017:[2,4,2,11]},{name:"Osterferien",2010:[3,29,4,9],2011:[4,18,4,27],2012:[4,2,4,7],2013:[3,25,3,30],2014:[4,14,4,17],2015:[4,2,4,2],2016:[3,24,3,24],2017:[4,10,4,13]},{name:"Pfingstferien",2010:[5,14,5,22],2011:[6,14,6,18],2012:[5,18,5,25],2013:[5,10,5,18],2014:[5,30,6,7],2015:[5,15,5,23],2016:[5,6,5,14],2017:[5,26,5,26]},{name:"Sommerferien",2010:[6,24,8,4],2011:[7,11,8,24],2012:[7,23,9,5],2013:[7,15,8,28],2014:[7,21,9,3],2015:[7,13,8,26],2016:[6,27,8,10],2017:[6,26,8,9]},{name:"Herbstferien",2010:[10,18,10,23],2011:[10,17,10,22],2012:[10,29,11,2],2013:[10,21,10,25],2014:[10,27,10,30],2015:[10,17,10,24],2016:[10,4,10,15]},{name:"Weihnachtsferien",2010:[12,22,1,5],2011:[12,22,1,7],2012:[12,19,1,4],2013:[12,21,1,3],2014:[12,22,1,5],2015:[12,21,1,5],2016:[12,19,1,2]}]},"Rheinland-Pfalz":{SH:[{name:"Osterferien",2010:[3,26,4,9],2011:[4,18,4,29],2012:[3,29,4,13],2013:[3,20,4,5],2014:[4,11,4,25],2015:[3,26,4,10],2016:[3,18,4,1],2017:[4,10,4,21]},{name:"Sommerferien",2010:[7,5,8,13],2011:[6,27,8,5],2012:[7,2,8,10],2013:[7,8,8,16],2014:[7,28,9,5],2015:[7,27,9,4],2016:[7,18,8,26],2017:[7,3,8,11]},{name:"Herbstferien",2010:[10,11,10,22],2011:[10,4,10,14],2012:[10,1,10,12],2013:[10,4,10,18],2014:[10,20,10,31],2015:[10,19,10,30],2016:[10,10,10,21]},{name:"Weihnachtsferien",2010:[12,23,1,7],2011:[12,22,1,6],2012:[12,20,1,4],2013:[12,23,1,7],2014:[12,22,1,7],2015:[12,23,1,8],2016:[12,22,1,6]}]},Brandenburg:{SH:[{name:"Winterferien",2010:[2,1,2,6],2011:[1,31,2,5],2012:[1,30,2,4],2013:[2,4,2,9],2014:[2,3,2,8],2015:[2,2,2,7],2016:[2,1,2,6],2017:[1,30,2,4]},{name:"Osterferien",2010:[3,31,4,10],2011:[4,20,4,30],2012:[4,4,4,14,4,30,4,30],2013:[3,27,4,6],2014:[4,16,4,26,5,2,5,2],2015:[4,1,4,11],2016:[3,23,4,2],2017:[4,12,4,22]},{name:"Pfingstferien",2010:[5,14,5,14],2011:[6,3,6,3],2012:[5,18,5,18],2013:[5,10,5,10],2014:[5,30,5,30],2015:[5,15,5,15],2016:[5,6,5,6,5,17,5,17],2017:[5,26,5,26]},{name:"Sommerferien",2010:[7,8,8,21],2011:[6,30,8,13],2012:[6,21,8,3],2013:[6,20,8,2],2014:[7,10,8,22],2015:[7,16,8,28],2016:[7,21,9,3],2017:[7,20,9,1]},{name:"Herbstferien",2010:[10,11,10,23],2011:[10,4,10,14],2012:[10,1,10,13],2013:[9,30,10,12,11,1,11,1],2014:[10,20,11,1],2015:[10,19,10,30],2016:[10,17,10,28]},{name:"Weihnachtsferien",2010:[12,23,1,1],2011:[12,23,1,3],2012:[12,24,1,4],2013:[12,23,1,3],2014:[12,22,1,2],2015:[12,23,1,2],2016:[12,23,1,3]}]}},at:{PH:{Neujahrstag:[1,1],"Heilige Drei Könige":[1,6],Ostermontag:["easter",1],Staatsfeiertag:[5,1],"Christi Himmelfahrt":["easter",39],Pfingstmontag:["easter",50],Fronleichnam:["easter",60],"Mariä Himmelfahrt":[8,15],Nationalfeiertag:[10,26],Allerheiligen:[11,1],"Mariä Empfängnis":[12,8],Christtag:[12,25],Stefanitag:[12,26]}},dk:{PH:{"Nytårsdag":[1,1],"Skærtorsdag":["easter",-3],Langfredag:["easter",-2],"Påskedag":["easter",0],"2. Påskedag":["easter",1],"Store Bededag":["easter",26],"Kristi Himmelfartsdag":["easter",39],Pinsedag:["easter",49],"2. Pinsedag":["easter",50],Grundlovsdag:[6,5],Juleaftensdag:[12,24],Juledag:[12,25],"2. Juledag":[12,26]}},ca:{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Canada Day":["canadaDay",0],"Labour Day":["firstSeptemberMonday",0],"Christmas Day":[12,25]},Alberta:{PH:{"New Year's Day":[1,1],"Alberta Family Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Heritage Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},"British Columbia":{PH:{"New Year's Day":[1,1],"Family Day":["firstFebruaryMonday",7],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"British Columbia Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},Manitoba:{PH:{"New Year's Day":[1,1],"Louis Riel Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Civic Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},"New Brunswick":{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"New Brunswick Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},"Newfoundland and Labrador":{PH:{"New Year's Day":[1,1],"Saint Patrick's Day":[3,17],"Good Friday":["easter",-2],"Saint George's Day":[4,23],"Discovery Day":[6,24],"Memorial Day":[7,1],"Orangemen's Day":[7,12],"Labour Day":["firstSeptemberMonday",0],"Armistice Day":[11,11],"Christmas Day":[12,25]}},"Northwest Territories":{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"National Aboriginal Day":[6,21],"Canada Day":["canadaDay",0],"Civic Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},"Nova Scotia":{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Natal Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},Nunavut:{PH:{"New Year's Day":[1,1],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Nunavut Day":[7,9],"Civic Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},Ontario:{PH:{"New Year's Day":[1,1],"Family Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"August Civic Public Holiday":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},"Prince Edward Island":{PH:{"New Year's Day":[1,1],"Islander Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Civic Holiday":["firstAugustMonday",0],"Gold Cup Parade Day":["firstAugustMonday",18],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}},Quebec:{PH:{"Jour de l'an":[1,1],"Vendredi saint":["easter",-2],"Lundi de Pâques":["easter",1],"Journée nationale des patriotes":["victoriaDay",0],"Fête nationale du Québec":[6,24],"Fête du Canada":["canadaDay",0],"Fête du Travail":["firstSeptemberMonday",0],"Jour de l'Action de grâce":["firstOctoberMonday",7],"Noël":[12,25]}},Saskatchewan:{PH:{"New Year's Day":[1,1],"Family Day":["firstFebruaryMonday",14],"Good Friday":["easter",-2],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Saskatchewan Day":["firstAugustMonday",0],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25]}},Yukon:{PH:{"New Year's Day":[1,1],"Heritage Day":["lastFebruarySunday",-2],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Victoria Day":["victoriaDay",0],"Canada Day":["canadaDay",0],"Discovery Day":["firstAugustMonday",14],"Labour Day":["firstSeptemberMonday",0],Thanksgiving:["firstOctoberMonday",7],"Remembrance Day":[11,11],"Christmas Day":[12,25],"Boxing Day":[12,26]}}},ru:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12]},Tatarstan:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Ураза-байрам":[7,28],"День Республики Татарстан":[8,30],"Курбан-байрам":[10,4],"День Конституции Республики Татарстан":[11,6]}},Bashkortostan:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4],"День Республики Башкирии":[10,11],"День Конституции Башкортостана":[12,24]}},Chuvashia:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Чувашской республики":[6,24]}},"Sakha Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Республики Саха":[4,27],"Ысыах":[6,23],"День государственности Республики Саха":[9,27]}},"Republic of Kalmykia":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Цаган Сар":[1,14],"День принятия Степного Уложения (Конституции) Республики Калмыкия":[4,5],"День рождения Будды Шакьямун":[6,6],"Зул":[12,15],"День памяти жертв депортации калмыцкого народа":[12,28]}},Buryatia:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Сагаалган":[1,14]}},"Republic of Karelia":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Республики Карелия":[6,8],"День освобождения Карелии от фашистских захватчиков":[9,30]}},"Удмуртская республика":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Государственности Удмуртской Республики":[5,31]}},Adygea:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4],"День образования Республики Адыгея":[10,5]}},"Republic of Dagestan":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Конституции Республики Дагестан":[7,26],"Ураза-байрам":[7,28],"День единства народов Дагестана":[9,15],"Курбан-байрам":[10,4]}},Ingushetia:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День образования Республики Ингушетия":[6,4],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4]}},"Карачаево-Черкесская республика":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День возрождения карачаевского народа":[5,3],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4]}},"Chechen Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День мира в Чеченской Республике":[4,16],"Ураза-байрам":[7,28],"Курбан-байрам":[10,4]}},"Кабардино-Балкарская республика":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День возрождения балкарского народа":[3,28],"Черкесский день траура":[5,21],"Ураза-байрам":[7,28],"День государственности Кабардино-Балкарской Республики":[9,1],"Курбан-байрам":[10,4]}},"Altai Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Чага-Байрам":[1,14]}},Tuva:{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Народный праздник Шагаа":[1,14],"День Республики Тыва":[8,15]}},"Saratov Oblast":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Радоница":[4,29]}},"Bryansk Oblast":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"Радоница":[4,29],"День освобождения города Брянска":[9,17]}},"Komi Republic":{PH:{"1. Новогодние каникулы":[1,1],"2. Новогодние каникулы":[1,2],"3. Новогодние каникулы":[1,3],"4. Новогодние каникулы":[1,4],"5. Новогодние каникулы":[1,5],"6. Новогодние каникулы":[1,6],"Рождество Христово":[1,7],"8. Новогодние каникулы":[1,8],"День защитника Отечества":[2,23],"Международный женский день":[3,8],"День Победы":[5,9],"Праздник Весны и Труда":[5,1],"День народного единства":[11,4],"День России":[6,12],"День Республики Коми":[8,22]}}},ua:{PH:{"Новий рік":[1,1],"Різдво":[1,7],"Міжнародний жіночий день":[3,8],"Великдень":["orthodox easter",1],"День Праці 1":[5,1],"День Праці 2":[5,2],"День Перемоги":[5,9],"День Конституції України":[6,28],"День Незалежності України":[8,24]}},us:{PH:{"New Year's Day":[1,1],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]},Alabama:{PH:{"New Year's Day":[1,1],"Robert E. Lee/Martin Luther King Birthday":["firstJanuaryMonday",14],"George Washington/Thomas Jefferson Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Confederate Memorial Day":["firstAprilMonday",21],"Jefferson Davis' Birthday":["firstJuneMonday",0]}},Alaska:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Seward's Day":["lastMarchMonday",0],"Alaska Day":[10,18]}},Arizona:{PH:{"New Year's Day":[1,1],"Dr. Martin Luther King Jr./Civil Rights Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Arkansas:{PH:{"New Year's Day":[1,1],"Dr. Martin Luther King Jr. and Robert E. Lee's Birthdays":["firstJanuaryMonday",14],"George Washington's Birthday and Daisy Gatson Bates Day":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25]}},California:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"César Chávez Day":[3,31]}},Colorado:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Connecticut:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Good Friday":["easter",-2]}},Delaware:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day After Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25],"Good Friday":["easter",-2]}},"District of Columbia":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Emancipation Day":[4,16]}},Florida:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Friday after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25]}},Georgia:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Robert E. Lee's Birthday":["firstNovemberThursday",22],"Washington's Birthday":[12,24],"Christmas Day":[12,25],"Confederate Memorial Day":["lastAprilMonday",0]}},Guam:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],"Guam Discovery Day":[3,5],"Good Friday":["easter",-2],"Liberation Day":[7,21],"All Souls' Day":[11,2],Thanksgiving:["firstNovemberThursday",21],"Lady of Camarin Day":[12,8],"Christmas Day":[12,25]}},Hawaii:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Prince Jonah Kuhio Kalanianaole Day":[3,26],"Kamehameha Day":[6,11],"Statehood Day":["firstAugustFriday",14],"Election Day":["firstNovemberMonday",1]}},Idaho:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr.-Idaho Human Rights Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Illinois:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Casimir Pulaski Day":["firstMarchMonday",0],"Election Day":["firstNovemberMonday",1]}},Indiana:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Lincoln's Birthday":["firstNovemberThursday",22],"Christmas Day":[12,25],"Good Friday":["easter",-2],"Primary Election Day":["firstMayMonday",1],"Election Day":["firstNovemberMonday",1]}},Iowa:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12]}},Kansas:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Kentucky:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25],"New Year's Eve":[12,31],"Good Friday":["easter",-2]}},Louisiana:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Mardi Gras":["easter",-47],"Good Friday":["easter",-2],"Election Day":["firstNovemberMonday",1]}},Maine:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Patriots' Day":["firstAprilMonday",14]}},Maryland:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Native American Heritage Day":["firstNovemberThursday",22],"Christmas Day":[12,25]}},Massachusetts:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Patriots' Day":["firstAprilMonday",14]}},Michigan:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25],"New Year's Eve":[12,31]}},Minnesota:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Mississippi:{PH:{"New Year's Day":[1,1],"Martin Luther King's and Robert E. Lee's Birthdays":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Confederate Memorial Day":["lastAprilMonday",0]}},Missouri:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Truman Day":[5,8]}},Montana:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Election Day":["firstNovemberMonday",1],"Christmas Eve":[12,24],"New Year's Eve":[12,31]}},Nebraska:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Arbor Day":["lastAprilFriday",0]}},Nevada:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Nevada Day":["lastOctoberFriday",0],"Family Day":["firstNovemberThursday",22]}},"New Hampshire":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Civil Rights Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25],"Election Day":["firstNovemberMonday",1]}},"New Jersey":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Good Friday":["easter",-2],"Election Day":["firstNovemberMonday",1]}},"New Mexico":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25]}},"New York":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Lincoln's Birthday":[2,12],"Election Day":["firstNovemberMonday",1]}},"North Carolina":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Eve":[12,24],"Christmas Day":[12,25],"Day after Christmas":[12,26],"Good Friday":["easter",-2]}},"North Dakota":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Ohio:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Oklahoma:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Day after Thanksgiving":["firstNovemberThursday",22],"Christmas Day":[12,25]}},Oregon:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Pennsylvania:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Flag Day":[6,14]}},"Puerto Rico":{PH:{"Día de Año Nuevo":[1,1],"Día de Reyes":[1,6],"Natalicio de Eugenio María de Hostos":["firstJanuaryMonday",7],"Natalicio de Martin Luther King, Jr.":["firstJanuaryMonday",14],"Día de los Presidentes":["firstFebruaryMonday",14],"Día de la Abolición de Esclavitud":[3,22],"Viernes Santo":["easter",-2],"Natalicio de José de Diego":["firstAprilMonday",14],"Recordación de los Muertos de la Guerra":["lastMayMonday",0],"Día de la Independencia":[7,4],"Constitución de Puerto Rico":[7,25],"Natalicio de Dr. José Celso Barbosa":[7,27],"Día del Trabajo":["firstSeptemberMonday",0],"Día de la Raza Descubrimiento de América":["firstOctoberMonday",7],"Día del Veterano":[11,11],"Día del Descubrimiento de Puerto Rico":[11,19],"Día de Acción de Gracias":["firstNovemberThursday",21],"Noche Buena":[12,24],"Día de Navidad":[12,25]}},"Rhode Island":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Victory Day":["firstAugustMonday",7]}},"South Carolina":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Confederate Memorial Day":[5,10]}},"South Dakota":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Native American Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Tennessee:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Eve":[12,24],"Christmas Day":[12,25],"Good Friday":["easter",-2]}},Texas:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Friday after Thanksgiving":["firstNovemberThursday",22],"Christmas Eve":[12,24],"Christmas Day":[12,25],"Day after Christmas":[12,26]}},"United States Virgin Islands":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Virgin Islands-Puerto Rico Friendship Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Three Kings Day":[1,6],"Transfer Day":[3,31],"Holy Thursday":["easter",-3],"Good Friday":["easter",-2],"Easter Monday":["easter",1],"Emancipation Day":[7,3],"Hurricane Supplication Day":["firstJulyMonday",21],"Hurricane Thanksgiving":[10,25],"Liberty Day":[11,1],"Christmas Second Day":[12,26],"New Year's Eve":[12,31]}},Utah:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Pioneer Day":[7,24]}},Vermont:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Town Meeting Day":["firstMarchTuesday",0],"Battle of Bennington":["firstAugustMonday",14]}},Virginia:{PH:{"New Year's Day":[1,1],"Lee-Jackson Day":["firstJanuaryMonday",11],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},Washington:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}},"West Virginia":{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"West Virginia Day":[6,20],"Lincoln's Day":["firstNovemberThursday",22]}},Wisconsin:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25],"Primary Election Day":["firstAugustTuesday",7],"Election Day":["firstNovemberMonday",1]}},Wyoming:{PH:{"New Year's Day":[1,1],"Martin Luther King, Jr. Day":["firstJanuaryMonday",14],"Washington's Birthday":["firstFebruaryMonday",14],"Memorial Day":["lastMayMonday",0],"Independence Day":[7,4],"Labor Day":["firstSeptemberMonday",0],"Columbus Day":["firstOctoberMonday",7],"Veterans Day":[11,11],Thanksgiving:["firstNovemberThursday",21],"Christmas Day":[12,25]}}},si:{PH:{"novo leto":[1,1],"Prešernov dan, slovenski kulturni praznik":[2,8],"velikonočna nedelja":["easter",0],"velikonočni ponedeljek":["easter",1],"dan upora proti okupatorju":[4,27],"praznik dela 1":[5,1],"praznik dela 2":[5,2],"binkoštna nedelja - binkošti":["easter",49],"dan državnosti":[6,25],"Marijino vnebovzetje":[8,15],"dan reformacije":[10,31],"dan spomina na mrtve":[11,1],"božič":[12,25],"dan samostojnosti in enotnosti":[12,26]}},it:{PH:{Capodanno:[1,1],Epifania:[1,6],"Liberazione dal nazifascismo (1945)":[4,25],Pasqua:["easter",0],"Lunedì di Pasqua":["easter",1],"Festa del lavoro":[5,1],"Festa della Repubblica":[6,2],"Assunzione di Maria":[8,15],Ognissanti:[11,1],"Festa dell’unità nazionale":["firstSeptemberSunday",0],"Immacolata Concezione":[12,8],"Natale di Gesù":[12,25],"Santo Stefano":[12,26]}},cz:{PH:{"Den obnovy samostatného českého státu":[1,1],"Velikonoční pondělí":["easter",1],"Svátek práce":[5,1],"Den vítězství":[5,8],"Den slovanských věrozvěstů Cyrila a Metoděje":[7,5],"Den upálení mistra Jana Husa":[7,6],"Den české státnosti":[9,28],"Den vzniku samostatného československého státu":[10,28],"Den boje za svobodu a demokracii":[11,17],"Štědrý den":[12,24],"1. svátek vánoční":[12,25],"2. svátek vánoční":[12,26]}}},r={wrong_words:{'Assuming "<ok>" for "<ko>".':{daytime:"sunrise-sunset",spring:"Mar-May",summer:"Jun-Aug",autumn:"Sep-Nov",winter:"Dec-Feb",_:"-","=":"-"},'"<ko>" wird als "<ok>" interpertiert.':{"frühling":"Mar-May","frühjahr":"Mar-May",sommer:"Jun-Aug",herbst:"Sep-Nov"},'Bitte benutze die englische Schreibweise "<ok>" für "<ko>".':{"werktags?":"Mo-Fr"},'Bitte benutze "<ok>" für "<ko>". Beispiel: "Mo-Fr 08:00-12:00; Tu off".':{"ruhetage?":"off",geschlossen:"off",geschl:"off"},'Neem de engelse afkorting "<ok>" voor "<ko>" alstublieft.':{gesloten:"off",feestdag:"PH",feestdagen:"PH"},'Assuming "<ok>" for "<ko>". Please avoid using "workday": https://wiki.openstreetmap.org/wiki/Talk:Key:opening_hours#need_syntax_for_holidays_and_workingdays':{wd:"Mo-Fr","on work days?":"Mo-Fr","weekdays?":"Mo-Fr",vardagar:"Mo-Fr"},'Please use something like "Mo off" instead "<ko>".':{except:"off"},'Please omit "<ko>" or use a colon instead: "12:00-14:00".':{h:""},'Please omit "<ko>".':{season:"",hs:"",hrs:"",hours:""},'Please omit "<ko>". The key must not be in the value.':{"opening_hours\\s*=":""},'Please omit "<ko>". You might want to express open end which can be specified as "12:00+" for example.':{from:""},'You can use notation "<ok>" for "<ko>" in the case that you want to express open end times. Example: "12:00+".':{"(:?bis|till?|-|–)? ?(?:open ?end|late)":"+"},'Please use notation "<ok>" for "<ko>". If the times are unsure or vary consider a comment e.g. 12:00-14:00 "only on sunshine".':{"~":"-","～":"-"},'Please use notation "<ok>" for "<ko>". Fallback rule: 12:00-14:00 || "call us"':{otherwise:"||"},'You can use notation "<ok>" for "?" temporally if the syntax will still be valid.':{"\\?":'unknown "please add this if known"'},'Please use notation "<ok>" for "<ko>". Although using "–" is typographical correct, the opening_hours syntax is defined with the normal hyphen. Correct typography should be done on application level …':{"–":"-"},'Please use notation "<ok>" for "<ko>".':{"→":"-","−":"-","—":"-","ー":"-",to:"-","до":"-",a:"-",as:"-","á":"-","ás":"-","às":"-",ate:"-","till?":"-",until:"-",through:"-",and:",","&":",","：":":","°°":":00",always:"24/7","always open":"24/7","always closed":"closed",nonstop:"24/7","24x7":"24/7",anytime:"24/7","all day":"24/7",daily:"Mo-Su",everyday:"Mo-Su","every day":"Mo-Su","all days":"Mo-Su","7j/7":"Mo-Su","7/7":"Mo-Su","7days":"Mo-Su","7 days":"Mo-Su","7 days a week":"Mo-Su","7 days/week":"Mo-Su","24 hours 7 days a week":"24/7","24 hours":"00:00-24:00",midday:"12:00",midnight:"00:00","(?:public )?holidays?":"PH","(?:one )?day after public holiday":"PH +1 day","(?:one )?day before public holiday":"PH -1 day","school ?holidays?":"SH","weekends?":"Sa,Su",daylight:"sunrise-sunset","(?:on|by)?(?:_| )?appointments?":'"on appointment"'},'Please use notation "<ok>" for "<ko>". Those characters look very similar but are not the same!':{"оff":"off"},'Please use time format in 24 hours notation ("<ko>"). If PM is used you might have to convert the hours to the 24 hours notation.':{pm:"","рм":"",am:"","ам":""},'Bitte verzichte auf "<ko>".':{uhr:"","geöffnet":"",zwischen:"",ist:"",durchgehend:"","öffnungszeit(?:en)?:?":""},'Bitte verzichte auf "<ko>". Sie möchten eventuell eine Öffnungszeit ohne vorgegebenes Ende (Open End) angeben. Beispiel: "12:00+"':{ab:"",von:""},'Es sieht so aus also möchten Sie zusätzliche Einschränkungen für eine Öffnungszeit geben. Falls sich dies nicht mit der Syntax ausdrücken lässt können Kommentare verwendet werden. Zusätzlich sollte eventuell das Schlüsselwort `open` benutzt werden. Bitte probiere "<ok>" für "<ko>".':{damen:'open "Damen"',herren:'open "Herren"'},'Bitte benutze die Schreibweise "<ok>" für "<ko>".':{bis:"-","täglich":"Mo-Su","(?:schul)?ferien":"SH","(?:an|nur)? ?sonn-?(?: und |/)feiertag(?:s|en?)?":"PH,Su","nach(?: |_)vereinbarung":'"Nach Vereinbarung"',"nach(?: |_)absprache":'"Nach Absprache"'},'Bitte benutze die Schreibweise "<ok>" für "<ko>". Es ist war typografisch korrekt aber laut der Spezifikation für opening_hours nicht erlaubt. Siehe auch: https://wiki.openstreetmap.org/wiki/DE:Key:opening_hours/specification.':{"„":'"',"“":'"',"”":'"'},'Please use notation "<ok>" for "<ko>". The used quote signs might be typographically correct but are not defined in the specification. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification.':{"«":'"',"»":'"',"‚":'"',"‘":'"',"’":'"',"「":'"',"」":'"',"『":'"',"』":'"'},'Please use notation "<ok>" for "<ko>". The used quote signs are not defined in the specification. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification.':{"'":'"'},'You might want to use comments instead of brackets (which are not valid in this context). If you do, replace "<ok>" with "<ko>".':{},'Bitte benutze die Schreibweise "<ok>" als Ersatz für "<ko>".':{und:",",u:",",auch:","},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>".':{"(?:an )?feiertag(?:s|en?)?":"PH"},'S\'il vous plaît utiliser "<ok>" pour "<ko>".':{"fermé":"off",et:",","à":"-","jours fériés":"PH"}},month:{"default":{jan:0,feb:1,mar:2,apr:3,may:4,jun:5,jul:6,aug:7,sep:8,oct:9,nov:10,dec:11},'Please use the English abbreviation "<ok>" for "<ko>".':{"jänner":0,january:0,february:1,march:2,april:3,june:5,july:6,august:7,september:8,sept:8,october:9,november:10,december:11},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>".':{januar:0,februar:1,"märz":2,maerz:2,mai:4,juni:5,juli:6,okt:9,oktober:9,dez:11,dezember:11},'S\'il vous plaît utiliser l\'abréviation "<ok>" pour "<ko>".':{janvier:0,"février":1,"fév":1,mars:2,avril:3,avr:3,mai:4,juin:5,juillet:6,"août":7,"aoû":7,septembre:8,octobre:9,novembre:10,"décembre":11},'Neem de engelse afkorting "<ok>" voor "<ko>" alstublieft.':{januari:0,februari:1,maart:2,mei:4,augustus:7}},calcday:{"default":{day:"day",days:"days"}},weekday:{"default":{su:0,mo:1,tu:2,we:3,th:4,fr:5,sa:6},'Assuming "<ok>" for "<ko>"':{m:1,w:3,f:5},'Please use the abbreviation "<ok>" for "<ko>".':{sun:0,sunday:0,"sundays?":0,mon:1,"mondays?":1,"tues?":2,"tuesdays?":2,"weds?":3,"wednesdays?":3,thu:4,"thurs?":4,"thursdays?":4,fri:5,"fridays?":5,sat:6,"saturdays?":6},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>". Could also mean Saturday in Polish …':{so:0},'Bitte benutze die englische Abkürzung "<ok>" für "<ko>".':{son:0,"sonn-":0,"sonntags?":0,"montags?":1,di:2,"die?":2,"dienstags?":2,mi:3,"mit?":3,"mittwochs?":3,"don?":4,"donnerstags?":4,fre:5,"freitags?":5,sam:6,"samstags?":6},'S\'il vous plaît utiliser l\'abréviation "<ok>" pour "<ko>".':{dim:0,dimanche:0,"lun?":1,lundi:1,mardi:2,mer:3,mercredi:3,"jeu?":4,jeudi:4,"ven?":5,vendredi:5,samedi:6},'Neem de engelse afkorting "<ok>" voor "<ko>" alstublieft.':{"zon?":0,zontag:0,zondag:0,maandag:1,din:2,dinsdag:2,"woe?":3,woensdag:3,donderdag:4,"vri?":5,vrijdag:5,"zat?":6,zaterdag:6},'Please use the English abbreviation "<ok>" for "<ko>".':{"neděle":0,ne:0,"pondělí":1,po:1,"úterý":2,"út":2,"středa":3,st:3,"čtvrtek":4,"čt":4,"pátek":5,"pá":5,sobota:6},'Please use the English abbreviation "<ok>" (Spanish) for "<ko>".':{martes:0,"miércoles":1,jueves:2,viernes:3,"sábado":4,domingo:5,lunes:6},'Please use the English abbreviation "<ok>" (Indonesian) for "<ko>".':{selasa:0,rabu:1,kami:2,jumat:3,sabtu:4,minggu:5,senin:6},'Please use the English abbreviation "<ok>" (Swedish) for "<ko>".':{"söndag":0,"söndagar":0,"måndag":1,ma:1,tisdag:2,onsdag:3,torsdag:4,fredag:5,"lördag":6,"lördagar":6},'Please use the English abbreviation "<ok>" (Polish) for "<ko>".':{niedziela:0,niedz:0,n:0,ndz:0,"poniedziałek":1,poniedzialek:1,pon:1,pn:1,wtorek:2,wt:2,"środa":3,sroda:3,"śr":3,sr:3,czwartek:4,czw:4,cz:4,"piątek":5,piatek:5,pt:5,sobota:6,sob:6},'Please use the English abbreviation "<ok>" (Russian) for "<ko>".':{"воскресенье":0,"Вс":0,"voskresen'ye":0,"понедельник":1,"Пн":1,"ponedel'nik":1,"вторник":2,vtornik:2,"среда":3,sreda:3,"четверг":4,chetverk:4,"пятница":5,pyatnitsa:5,"суббота":6,subbota:6},'Please use the English abbreviation "<ok>" (Danish) for "<ko>".':{"søndag":0,mandag:1,tirsdag:2,onsdag:3,torsdag:4,fredag:5,"lørdag":6}},timevar:{"default":{sunrise:"sunrise",sunset:"sunset",dawn:"dawn",dusk:"dusk"},'Please use notation "<ok>" for "<ko>".':{sundown:"sunset"},'Bitte benutze die Schreibweise "<ok>" für "<ko>".':{"morgendämmerung":"dawn","abenddämmerung":"dusk",sonnenaufgang:"sunrise",sonnenuntergang:"sunset"}},event:{"default":{easter:"easter"},'Bitte benutze die Schreibweise "<ok>" für "<ko>".':{ostern:"easter"}}},n={"unexpected token":'Unexpected token: "__token__" This means that the syntax is not valid at that point or it is currently not supported.',"no string":"The value (first parameter) is not a string.",nothing:"The value contains nothing meaningful which can be parsed.","nothing useful":"This rule does not contain anything useful. Please remove this empty rule.","programmers joke":"Might it be possible that you are a programmer and adding a semicolon after each statement is hardwired in your muscle memory ;) ? The thing is that the semicolon in the opening_hours syntax is defined as rule separator. So for compatibility reasons you should omit this last semicolon.","interpreted as year":'The number __number__ will be interpreted as year. This is probably not intended. Times can be specified as "12:00".',"rule before fallback empty":"Rule before fallback rule does not contain anything useful","hour min seperator":'Please use ":" as hour/minute-separator',"warnings severity":'The parameter optional_conf_parm["warnings_severity"] must be an integer number between 0 and 7 (inclusive). Given __severity__, expected one of the following numbers: __allowed__.',"optional conf parm type":"The optional_conf_parm parameter is of unknown type. Given __given__","conf param tag key missing":'The optional_conf_parm["tag_key"] is missing, required by optional_conf_parm["map_value"].',"conf param mode invalid":'The optional_conf_parm["mode"] parameter is a invalid number. Gave __given__, expected one of the following numbers: __allowed__.',"conf param unkown type":'The optional_conf_parm["__key__"] parameter is of unknown type. Given __given__, expected __expected__.',"library bug":'An error occurred during evaluation of the value "__value__". Please file a bug report here: __url__.__message__',"use multi":'You have used __count__ __part2__ Rules can be separated by ";".',"selector multi 2a":"__what__ in one rule. You may only use one in one rule.","selector multi 2b":'not connected __what__ in one rule. This is probably an error. Equal selector types can (and should) always be written in conjunction separated by comma. Example for time ranges "12:00-13:00,15:00-18:00". Example for weekdays "Mo-We,Fr".',"selector state":"state keywords",comments:"comments","holiday ranges":"holiday ranges",months:"months",weekdays:"weekdays",ranges:"ranges","default state":"This rule which changes the default state (which is closed) for all following rules is not the first rule. The rule will overwrite all previous rules. It can be legitimate to change the default state to open for example and then only specify for which times the facility is closed.",vague:"This rule is not very explicit because there is no time selector being used. Please add a time selector to this rule or use a comment to make it more explicit.","empty comment":"You have used an empty comment. Please either write something in the comment or use the keyword unknown instead.",separator_for_readability:"You have used the optional symbol <separator_for_readability> in the wrong place. Please check the syntax specification to see where it could be used or remove it.","strange 24/7":'You used 24/7 in a way that is probably not interpreted as "24 hours 7 days a week". For correctness you might want to use "open" or "closed" for this rule and then write your exceptions which should achieve the same goal and is more clear e.g. "open; Mo 12:00-14:00 off".',"public holiday":'There was no PH (public holiday) specified. This is not very explicit.__part2__ Please either append a "PH off" rule if the amenity is closed on all public holidays or use something like "Sa,Su,PH 12:00-16:00" to say that on Saturdays, Sundays and on public holidays the amenity is open 12:00-16:00. If you are not certain try to find it out. If you can’t then do not add PH to the value and ignore this warning.',"public holiday part2":' Unfortunately the tag key (e.g. "opening_hours", or "lit") is unknown to opening_hours.js. This warning only applies to the key __keys__. If your value is for that key than read on. If not you can ignore the following.',switched:'The selector "__first__" was switched with the selector "__second__" for readablitity and compatibiltity reasons.',"no colon after":'Please don’t use ":" after __token__.',"number -5 to 5":"Number between -5 and 5 (except 0) expected.","one weekday constraint":"You can not use more than one constrained weekday in a month range","range contrainted weekdays":"You can not use a range of constrained weekdays in a month range",expected:'"__symbol__" expected.',"range zero":"You can not use __type__ ranges with period equals zero.","period one year+":'Please don’t use __type__ ranges with period equals one. If you want to express that a facility is open starting from a year without limit use "<year>+".',"period one":"Please don’t use __type__ ranges with period equals one.","month 31":"The day for __month__ must be between 1 and 31.","month 30":"Month __month__ doesn't have 31 days. The last day of __month__ is day 30.","month feb":"Month __month__ either has 28 or 29 days (leap years).","point in time":"hyphen (-) or open end (+) in time range __calc__expected. For working with points in time, the mode for __libraryname__ has to be altered. Maybe wrong tag?",calculation:"calculation","time range continue":"Time range does not continue as expected","period continue":'Time period does not continue as expected. Example "/01:30".',"time range mode":'__libraryname__ is running in "time range mode". Found point in time.',"point in time mode":'__libraryname__ is running in "points in time mode". Found time range.',"outside current day":"Time range starts outside of the current day","two midnights":"Time spanning more than two midnights not supported","without minutes":'Time range without minutes specified. Not very explicit! Please use this syntax instead "__syntax__".',"outside day":"Time range starts outside of the current day","zero calculation":'Adding zero in a variable time calculation does not change the variable time. Please omit the calculation (example: "sunrise-(sunset-00:00)").',"calculation syntax":"Calculation with variable time is not in the right syntax",missing:'Missing "__symbol__"',"(time)":"(time)","bad range":"Bad range: __from__-__to__","] or more numbers":'"]" or more numbers expected.',"additional rule no sense":'An additional rule does not make sense here. Just use a ";" as rule separator. See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification#explain:additional_rule_separator',"unexpected token weekday range":"Unexpected token in weekday range: __token__","max differ":"There should be no reason to differ more than __maxdiffer__ days from a __name__. If so tell us …","adding 0":"Adding 0 does not change the date. Please omit this.","unexpected token holiday":"Unexpected token (holiday parser): __token__","no SH defintion":"School holiday __name__ has no definition for the year __year__ You can also add them: __repository_url__","no PH definition":"There are no holidays __name__ defined for country __cc__. You can also add them: __repository_url__","no PH definition state":"There are no holidays __name__ defined for country __cc__ and state __state__. You can also add them: __repository_url__","no country code":"Country code missing which is needed to select the correct holidays (see README how to provide it)","movable no formular":"Movable day __name__ can not not be calculated. Please add the formula how to calculate it.","movable not in year":"The movable day __name__ plus __days__ days is not in the year of the movable day anymore. Currently not supported.","year range one year":'A year range in which the start year is equal to the end year does not make sense. Please remove the end year. E.g. "__year__ May 23"',"year range reverse":"A year range in which the start year is greater than the end year does not make sense. Please turn it over.","year past":"The year is in the past.","unexpected token year range":"Unexpected token in year range: __token__","week range reverse":"You have specified a week range in reverse order or leaping over a year. This is (currently) not supported.","week negative":"You have specified a week date less then one. A valid week date range is 1-53.","week exceed":"You have specified a week date greater then 53. A valid week date range is 1-53.","week period less than 2":'You have specified a week period which is less than two. If you want to select the whole range from week __weekfrom__ to week __weekto__ then just omit the "/__period__".',"week period greater than 26":'You have specified a week period which is greater than 26. 26.5 is the half of the maximum 53 week dates per year so a week date period greater than 26 would only apply once per year. Please specify the week selector as "week __weekfrom__" if that is what you want to express.',"unexpected token week range":"Unexpected token in week range: __token__","unexpected token month range":"Unexpected token in month range: __token__","day range reverse":"Range in wrong order. From day is greater than to day.","open end":"Specified as open end. Closing time was guessed.","date parameter needed":"Date parameter needed."};
if("object"==typeof exports){var i,o,s;o=e.SunCalc||require("suncalc");try{i=e.moment||require("moment")}catch(y){}try{s=require("./locales/core")}catch(y){}module.exports=a(o,i,s,t,r,n)}else e.opening_hours=a(e.SunCalc,e.moment,e.i18n,t,r,n)}(this,function(e,a,t,r,n,i){return function(o,s,y){function u(e){var a;for(var t in X){if(e===t){a=t;break}e.match(t)&&(a=t)}return a}function d(e,a){if(typeof y[e]===a)return!0;if("undefined"!=typeof y[e])throw da("conf param unkown type",{key:e,given:typeof y[e],expected:a});return!1}function f(e,a,t){if("number"==typeof e){var r=0;return-1===e?r=o.length-a:"undefined"==typeof Ma[e][0][a]?-1===a?(r=o.length,"object"==typeof Ma[e+1]&&"number"==typeof Ma[e+1][2]?r-=Ma[e+1][2]:"number"==typeof Ma[e][2]&&(r-=Ma[e][2])):(h("Bug in warning generation code which could not determine the exact position of the warning or error in value."),r=o.length,"number"==typeof Ma[e][2]&&(r-=Ma[e][2],console.warn("Last token for rule: "+Ma[e]),console.log(o.substring(0,r)+" <--- ("+t+")"),console.log("\n")),console.warn("tokens[nrule][2] is undefined. This is ok if nrule is the last rule.")):(r=o.length,"object"==typeof Ma[e][0][a+1]?r-=Ma[e][0][a+1][2]:"number"==typeof Ma[e][2]&&(r-=Ma[e][2])),o.substring(0,r)+" <--- ("+t+")"}return"string"==typeof e?e.substring(0,a)+" <--- ("+t+")":void 0}function h(e){return e="undefined"==typeof e?"":" "+e,e=da("library bug",{value:o,url:na,message:e}),console.log(e),e}function l(e){for(var a=[],t=[],r=!1;""!==e;){var n;if(n=e.match(/^week\b/i))t.push([n[0].toLowerCase(),n[0].toLowerCase(),e.length]),e=e.substr(n[0].length);else if(n=e.match(/^(?:off\b|closed\b|open\b|unknown\b)/i))t.push([n[0].toLowerCase(),"state",e.length]),e=e.substr(n[0].length);else if(n=e.match(/^24\/7/i))t.push([n[0],n[0],e.length]),e=e.substr(n[0].length);else if(n=e.match(/^(?:PH|SH)/i))t.push([n[0].toUpperCase(),"holiday",e.length]),e=e.substr(2);else if(n=e.match(/^(&|_|→|–|−|—|ー|=|·|öffnungszeit(?:en)?:?|opening_hours\s*=|\?|~|～|：|°°|always (?:open|closed)|24x7|24 hours 7 days a week|24 hours|7 ?days(?:(?: a |\/)week)?|7j?\/7|all days?|every day|(:?bis|till?|-|–)? ?(?:open ?end|late)|(?:(?:one )?day (?:before|after) )?(?:school|public) holidays?|days?\b|до|рм|ам|jours fériés|on work days?|sonntags?|(?:nur |an )?sonn-?(?:(?: und |\/)feiertag(?:s|en?)?)?|(?:an )?feiertag(?:s|en?)?|(?:nach|on|by) (?:appointments?|vereinbarung|absprache)|[_a-zäößàáéøčěíúýřПнВсо]+\b|à|á|mo|tu|we|th|fr|sa|su|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\.?/i)){var i=m(n[1].toLowerCase(),e.length);if("object"==typeof i)t.push([i[0],i[1],e.length]),e=e.substr(n[0].length);else if("string"==typeof i){if("pm"===n[1].toLowerCase()){var o,s=t.length-1;s>=0&&(s-2>=0&&D(t,s-2,"number","timesep","number")?(s-=2,o=t[s]):D(t,s,"number")&&(o=t[s]),"object"==typeof o&&o[0]<=12&&(o[0]+=12,t[s]=o))}var y=l(i)[0];if(y[1]===!0)throw h();for(var u=0;u<y[0].length;u++)t.push([y[0][u][0],y[0][u][1],e.length]);e=e.substr(n[0].length)}else t.push([e[0].toLowerCase(),e[0].toLowerCase(),e.length-1]),e=e.substr(1)}else if(n=e.match(/^\d+/))Number(n[0])>1900?(t.push([Number(n[0]),"year",e.length]),Number(n[0])>=2100&&ca.push([-1,e.length-1,da("interpreted as year",{number:Number(n[0])})])):t.push([Number(n[0]),"number",e.length]),e=e.substr(n[0].length);else if(n=e.match(/^"([^"]+)"/))t.push([n[1],"comment",e.length]),e=e.substr(n[0].length);else if(n=e.match(/^(["'„“‚‘’«「『])([^"'“”‘’»」』;|]*)(["'”“‘’»」』])/)){for(var d=1;3>=d;d+=2){var i=m(n[d],e.length-(3===d?n[1].length+n[2].length:0));if("string"!=typeof i&&'"'!==n[d])throw h("A character for error tolerance was allowed in the regular expression but is not covered by word_error_correction which is needed to format a proper message for the user.")}t.push([n[2],"comment",e.length]),e=e.substr(n[0].length)}else if(e.match(/^;/))a.push([t,r,e.length]),e=e.substr(1),t=[],r=!1;else if(e.match(/^\|\|/)){if(0===t.length)throw f(-1,e.length-2,da("rule before fallback empty"));a.push([t,r,e.length]),t=[],e=e.substr(2),r=!0}else e.match(/^(?:␣|\s)/)?e=e.substr(1):(n=e.match(/^\s+/))?e=e.substr(n[0].length):e.match(/^[:.]/)?("."!==e[0]||ba||ca.push([-1,e.length-1,da("hour min seperator")]),t.push([":","timesep",e.length]),e=e.substr(1)):(t.push([e[0].toLowerCase(),e[0].toLowerCase(),e.length]),e=e.substr(1))}return a.push([t,r]),a}function m(e,a){for(var t in n)for(var r in n[t])for(var i in n[t][r])if(e.match(new RegExp("^"+i+"$"))){var o=n[t][r][i];if("default"===r)return[o,t];if("wrong_words"!==t||ba){var s;for(s in n[t]["default"])if(n[t]["default"][s]===o)break;if("undefined"==typeof s)throw h("Including the stacktrace.");return"timevar"!==t&&(s=s.charAt(0).toUpperCase()+s.slice(1)),ba||ca.push([-1,a-e.length,r.replace(/<ko>/,e).replace(/<ok>/,s)]),[o,t]}return ca.push([-1,a-e.length,r.replace(/<ko>/,e).replace(/<ok>/,o)]),o}return void 0}function g(e){if(4>ma)return[];if(!ba&&"object"==typeof e){for(var a=["year","month","week","holiday"],t=["weekday","time","24/7","state","comment"],r=[],n=[],i={},o=0;o<_a.length;o++)if(0!==_a[o][0].length){var s=[0,0,void 0];r[o]={},n[o]=[];do{s=b(_a[o][0],s[1]);for(var y=0;y<=s[1];y++)"object"==typeof _a[o][0][y]&&"PH"===_a[o][0][y][0]&&(i.PH=!0);s[0]===s[1]&&"24/7"===_a[o][0][s[0]][0]&&(i["24/7"]=!0),"object"!=typeof r[o][s[2]]?r[o][s[2]]=[s[1]]:r[o][s[2]].push(s[1]),n[o].push(s[2]),s[1]++}while(s[1]<_a[o][0].length)}for(var o=0;o<r.length;o++){for(var u in r[o])r[o][u].length>1&&(ca.push([o,r[o][u][r[o][u].length-1],da("use multi",{count:r[o][u].length,part2:u.match(/^(?:comment|state)/)?da("selector multi 2a",{what:da("state"===u?"selector state":"comments")}):da("selector multi 2b",{what:da(u+(u.match(/^(?:month|weekday)$/)?"s":" ranges"))})})]),pa=!0);"object"==typeof r[o].state&&1===Object.keys(r[o]).length?0!==o&&ca.push([o,_a[o][0].length-1,da("default state")]):"undefined"==typeof r[o].time&&("object"==typeof r[o].state&&"open"===_a[o][0][r[o].state[0]][0]&&"undefined"==typeof r[o].comment||"undefined"==typeof r[o].comment&&"undefined"==typeof r[o].state&&"undefined"==typeof r[o]["24/7"])&&ca.push([o,_a[o][0].length-1,da("vague")]),"object"==typeof r[o].comment&&0===_a[o][0][r[o].comment[0]][0].length&&ca.push([o,r[o].comment[0],da("empty comment")]);for(var d=0;d<n[o].length-1;d++){var u=n[o][d],h=n[o][d+1];(-1!==a.indexOf(u)&&-1!==a.indexOf(h)||-1!==t.indexOf(u)&&-1!==t.indexOf(h))&&":"===_a[o][0][r[o][u][0]][0]&&ca.push([o,r[o][u][0],da("separator_for_readability")])}"object"==typeof _a[o][0][0]&&","===_a[o][0][0][0]&&"rule separator"===_a[o][0][0][1]&&"object"==typeof r[o].state&&("closed"===_a[o][0][r[o].state[0]][0]||"off"===_a[o][0][r[o].state[0]][0])}var l=e.advance();if(l===!0&&i["24/7"]&&!ba&&ca.push([-1,0,da("strange 24/7")]),ma>=5&&!i.PH&&!i["24/7"]&&!ba&&("string"==typeof ha&&X[la].warn_for_PH_missing||"string"!=typeof ha)){var m=[];for(var g in X)X[g].warn_for_PH_missing&&m.push(g);ca.push([-1,0,da("public holiday",{part2:"string"!=typeof ha?da("public holiday part2",{keys:m.join(", ")}):""})])}p()}ba=!0;for(var c=[],d=0;d<ca.length;d++)c.push(f(ca[d][0],ca[d][1],ca[d][2]));return c}function c(e,a){return"string"==typeof e[a][3]?3:"comment"===e[a][1]||"state"===e[a][1]||"24/7"===e[a][1]||"rule separator"===e[a][1]?1:!1}function b(e,a){for(var t,r,n=a;n>=0&&!(r=c(e,n));n--);if(t=n,1===r)return t+1<e.length&&":"===e[t+1][0]&&t++,[n,t,e[n][r]];for(t++;t<e.length;t++)if(c(e,t))return[n,t-1,e[n][r]];return[n,t-1,e[n][r]]}function p(e){var r,n={},i=!1;va="";var o=[];"object"==typeof e&&("object"==typeof e.conf&&(n=e.conf),"number"==typeof e.rule_index&&(r=e.rule_index),e.get_internals===!0&&(i=!0));for(var s in Z)"undefined"==typeof n[s]&&(n[s]=Z[s]);if("undefined"!=typeof a&&"string"==typeof n.locale&&"en"!==n.locale){var y=a.locale();a.locale("en");var u=a.weekdaysMin(),d=a.months().map(function(e){return e.substr(0,3)});a.locale(n.locale);var f=a.weekdaysMin(),l=a.months().map(function(e){return e.substr(0,3)});a.locale(y)}for(var m=0;m<_a.length;m++)if(0!==_a[m][0].length){if("number"==typeof r){if(r!==m)continue}else 0!==m&&(va+=_a[m][1]?n.rule_sep_string+"|| ":("rule separator"===_a[m][0][0][1]?",":n.print_semicolon?";":"")+n.rule_sep_string);var g=[0,0,void 0],c=[],p=0;do{if(g=b(_a[m][0],g[1]),p>50)throw h("infinite loop");"rule separator"!==g[2]&&c.push([g,U(_a[m][0],g[0],g[1],g[2],n)]),g[1]++,p++}while(g[1]<_a[m][0].length);var D=c.slice();pa||c.sort(function(e,a){var t=["year","month","week","holiday","weekday","time","24/7","state","comment"];return t.indexOf(e[0][2])-t.indexOf(a[0][2])});var M=va.length;if("string"==typeof n.locale&&"en"!==n.locale){var y=t.lng();y!==n.locale&&t.setLng(n.locale);for(var v=0;v<c.length;v++)if(type=c[v][0][2],"weekday"===type)for(var s in u)c[v][1]=c[v][1].replace(new RegExp(u[s],"g"),f[s]);else if("month"===type)for(var s in d)c[v][1]=c[v][1].replace(new RegExp(d[s],"g"),l[s]);else c[v][1]=t.t(["opening_hours:pretty."+c[v][1],c[v][1]]);y!==ia&&t.setLng(y)}if(va+=c.map(function(e){return e[1]}).join(" "),o.push(c),!Da)for(var v=0,w=D.length;w>v;v++)if(D[v]!==c[v]){for(var k=v+M,_=0;v>=_;_++)k+=c[_][1].length;ca.push([va,k,da("switched",{first:c[v][0][2],second:D[v][0][2]})])}}return Da=!0,i?[o,_a]:va}function D(e,a){if(a+arguments.length-2>e.length)return!1;for(var t=0;t<arguments.length-2;t++)if(e[a+t][1]!==arguments[t+2])return!1;return!0}function M(e,a){return function(t){var r=e(new Date(t.getTime()+a));return"undefined"==typeof r[1]?r:[r[0],new Date(r[1].getTime()-a)]}}function v(e,a,t,r){for(var n=!1,i=[];a<e.length;){if(D(e,a,"weekday"))a=L(e,a,t);else if(D(e,a,"24/7"))t.time.push(function(){return[!0]}),a++;else if(D(e,a,"holiday"))a=D(e,a+1,",")?J(e,a,t,!0):J(e,a,t,!1),wa=!1;else if(D(e,a,"month","number")||D(e,a,"month","weekday")||D(e,a,"year","month","number")||D(e,a,"year","event")||D(e,a,"event"))a=G(e,a,r),wa=!1;else if(D(e,a,"year"))a=I(e,a),wa=!1;else if(D(e,a,"month"))a=E(e,a);else if(D(e,a,"week"))e[a][3]="week",a=A(e,a);else if(0===a||a===e.length-1||":"!==e[a][0]||"string"==typeof i[1]&&"time"===i[1])if(D(e,a,"number","timesep")||D(e,a,"timevar")||D(e,a,"(","timevar")||D(e,a,"number","-"))a=H(e,a,t,!1),i=[a,"time"];else if(D(e,a,"state"))"open"===e[a][0]?t.meaning=!0:"closed"===e[a][0]||"off"===e[a][0]?t.meaning=!1:(t.meaning=!1,t.unknown=!0),n=!0,a++,"object"==typeof e[a]&&","===e[a][0]&&(a=[a+1]);else if(D(e,a,"comment"))t.comment=e[a][0],n||(t.meaning=!1,t.unknown=!0),n=!0,a++,"object"==typeof e[a]&&","===e[a][0]&&(a=[a+1]);else{if(0!==a&&a!==e.length-1||!D(e,a,"rule separator")){var o=g();throw f(r,a,da("unexpected token",{token:e[a][1]}))+(o?" "+o.join("; "):"")}a++,console.log("value: "+r)}else!ba&&D(e,a-1,"holiday")&&ca.push([r,a,da("no colon after",{token:e[a-1][1]})]),a++;if("object"==typeof a){e[a[0]-1][1]="rule separator";break}"number"==typeof i[0]&&i[0]!==a&&(i=[])}return a}function w(e,a){return new Date(e.getFullYear(),e.getMonth(),e.getDate(),0,a)}function k(e,a){var t=a-e.getDay();return new Date(e.getFullYear(),e.getMonth(),e.getDate()+t+(0>t?7:0))}function _(e,a,t){for(;a<e.length;a++){if(D(e,a,"number","-","number"))t(e[a][0],e[a+2][0],a),a+=3;else if(D(e,a,"-","number"))t(-e[a+1][0],-e[a+1][0],a),a+=2;else{if(!D(e,a,"number"))throw f(Ta,a+D(e,a,"-"),"Unexpected token in number range: "+e[a][1]);t(e[a][0],e[a][0],a),a++}if(!D(e,a,","))break}return a}function T(e,a){var t=0,r=_(e,a,function(e,a,r){if(0===e||-5>e||e>5)throw f(Ta,r,da("number -5 to 5"));if(e!==a)throw f(Ta,r+2,da("range contrainted weekdays"));if(0!==t)throw f(Ta,r,da("one weekday constraint"));t=e});if(!D(e,r,"]"))throw f(Ta,r,da("expected",{symbol:"]"}));return[t,r+1]}function S(e,a,t,r){if(!ba){if(0===a)throw f(Ta,e,da("range zero",{type:t}));1===a&&ca.push("string"==typeof r&&"no_end_year"===r?[Ta,e,da("period one year+",{type:t})]:[Ta,e,da("period one",{type:t})])}}function P(e,a,t,r,n){var i=k(new Date(e,a+(r[0]>0?0:1),1),t);return i.setDate(i.getDate()+7*(r[0]+(r[0]>0?-1:0))),"object"==typeof n&&n[1]&&i.setDate(i.getDate()+n[0]),i}function N(e,a,t,r){if(1>a||a>31)throw f(t,r,da("month 31",{month:$[e]}));if((3===e||5===e||8===e||10===e)&&31===a)throw f(t,r,da("month 30",{month:$[e]}));if(1===e&&30===a)throw f(t,r,da("month feb",{month:$[e]}))}function H(a,t,r,n){for(n||(a[t][3]="time");t<a.length;t++){var i=[],o=[];o[0]=D(a,t,"number","timesep","number"),i[0]=D(a,t,"(","timevar");var s,y;if(o[0]||D(a,t,"timevar")||i[0]){var u,d=!1,h=!1,l=[0,0],m=[];o[0]?s=C(a,Ta,t+i[0]):(m[0]=a[t+i[0]][0],s=q[m[0]],i[0]&&(l[0]=F(a,t),s+=l[0]));var g=t+(o[0]?3:i[0]?7:1)+1;if(!D(a,g-1,"-"))if(D(a,g-1,"+"))h=!0;else{if(0===fa)throw f(Ta,t+(o[0]?"object"==typeof a[t+3]?3:2:i[0]?2:"object"==typeof a[t+1]?1:0),da("point in time",{calc:i[0]?da("calculation")+" ":"",libraryname:ta}));y=s+1,d=!0}if(h)1===n&&(s+=ea),y=s>=1320?s+480:s>=1020?s+600:ea;else if(!d){if(o[1]=D(a,g,"number","timesep","number"),i[1]=D(a,g,"(","timevar"),!(o[1]||D(a,g,"timevar")||i[1]))throw f(Ta,g-("object"==typeof a[g]?0:1),da("time range continue"));o[1]?y=C(a,Ta,g):(m[1]=a[g+i[1]][0],y=q[m[1]]),i[1]&&(l[1]=F(a,g),y+=l[1])}if(t=g+(d?-1:o[1]?3:i[1]?7:!h),D(a,t,"/","number")){if(D(a,t+2,"timesep","number"))u=C(a,Ta,t+1),t+=4;else if(u=a[t+1][0],t+=2,D(a,t,"timesep"))throw f(Ta,t,da("period continue"));if(0===fa)throw f(Ta,t-1,da("time range mode",{libraryname:ta}));d=!0}else if(D(a,t,"+"))H(a,g,r,s>y?1:!0),t++;else if(1===fa&&!d)throw f(Ta,g,da("point in time mode",{libraryname:ta}));if("string"==typeof ya?o[0]&&(o[1]||h||d)||(wa=!1):m=[],!n&&s>=ea)throw f(Ta,g-2,da("outside current day"));if((s>y||o[0]&&o[1]&&s===y)&&(y+=ea),y>2*ea)throw f(Ta,g+(o[1]?4:i[1]?7:1)-2,da("two midnights"));0===s&&y===ea?r.time.push(function(){return[!0]}):y>ea?(r.time.push(function(a,t,r,n,i,o,s,y){return function(u){var d=60*u.getHours()+u.getMinutes();if(r[0]){var f=e.getTimes(u,ya,ua)[r[0]];a=60*f.getHours()+f.getMinutes()+n[0]}if(r[1]){var h=e.getTimes(u,ya,ua)[r[1]];t=60*h.getHours()+h.getMinutes()+n[1],t+=ea}else o&&"number"!=typeof s&&(t=a+1);if("number"==typeof s){if(a>d)return[!1,w(u,a)];if(t>=d)for(var l=a;d+s>=l;l+=s){if(l===d)return[!0,w(u,d+1)];if(l>d)return[!1,w(u,l)]}return[!1,w(u,ea)]}return a>d?[!1,w(u,a)]:[!0,w(u,t),i,y]}}(s,y,m,l,h,d,u,n)),r.wraptime.push(function(a,t,r,n,i,o,s,y){return function(o){var u=60*o.getHours()+o.getMinutes();if(r[0]){var d=e.getTimes(o,ya,ua)[r[0]];a=60*d.getHours()+d.getMinutes()+n[0]}if(r[1]){var f=e.getTimes(o,ya,ua)[r[1]];t=60*f.getHours()+f.getMinutes()+n[1]}if("number"==typeof s){if(t>=u)for(var h=0;u+s>=h;h+=s){if(h===u)return[!0,w(o,u+1)];if(h>u)return[!1,w(o,h)]}}else if(t>u)return[!0,w(o,t),i,y];return[!1,void 0]}}(s,y-ea,m,l,h,d,u,n))):r.time.push(function(a,t,r,n,i,o,s){return function(y){y=new Date(y);var u=60*y.getHours()+y.getMinutes();if(r[0]){var d=e.getTimes(y,ya,ua)[r[0]];a=60*d.getHours()+d.getMinutes()+n[0]}if(r[1]){var f=e.getTimes(y,ya,ua)[r[1]];t=60*f.getHours()+f.getMinutes()+n[1]}else o&&"number"!=typeof s&&(t=a+1);if("number"==typeof s){if(a>u)return[!1,w(y,a)];if(t>=u)for(var h=a;u+s>=h;h+=s){if(h===u)return[!0,w(y,u+1)];if(h>u)return[!1,w(y,h)]}return[!1,w(y,ea)]}return a>u?[!1,w(y,a)]:t>u?[!0,w(y,t),i]:[!1,w(y,a+ea)]}}(s,y,m,l,h,d,u,n))}else{if(!D(a,t,"number","-","number")){if(D(a,t,"("))throw f(Ta,t,'Missing variable time (e.g. sunrise) after: "'+a[t][1]+'"');if(D(a,t,"number","timesep"))throw f(Ta,t+1,'Missing minutes in time range after: "'+a[t+1][1]+'"');if(D(a,t,"number"))throw f(Ta,t+("object"==typeof a[t+1]?1:0),'Missing time separator in time range after: "'+a[t][1]+'"');return[t]}if(s=60*a[t][0],y=60*a[t+2][0],ba||ca.push([Ta,t+2,da("without minutes",{syntax:(a[t][0]<10?"0":"")+a[t][0]+":00-"+(a[t+2][0]<10?"0":"")+a[t+2][0]+":00"})]),s>=ea)throw f(Ta,t,da("outside day"));if(s>y&&(y+=ea),y>2*ea)throw f(Ta,t+2,da("two midnights"));y>ea?(r.time.push(function(e,a){return function(t){var r=60*t.getHours()+t.getMinutes();return e>r?[!1,w(t,e)]:[!0,w(t,a)]}}(s,y)),r.wraptime.push(function(e,a){return function(e){var t=60*e.getHours()+e.getMinutes();return a>t?[!0,w(e,a)]:[!1,void 0]}}(s,y-ea))):r.time.push(function(e,a){return function(t){var r=60*t.getHours()+t.getMinutes();return e>r?[!1,w(t,e)]:a>r?[!0,w(t,a),h]:[!1,w(t,e+ea)]}}(s,y)),t+=3}if(!D(a,t,","))break}return t}function C(e,a,t){if(e[t+2][0]>59)throw f(a,t+2,"Minutes are greater than 59.");return 60*e[t][0]+e[t+2][0]}function F(e,a){var t;if(D(e,a+2,"+")||D(e,a+2,"-"))if(D(e,a+3,"number","timesep","number")){if(D(e,a+6,")")){var r="+"===e[a+2][0]?"1":"-1",n=C(e,Ta,a+3)*r;return 0===n&&ca.push([Ta,a+5,da("zero calculation")]),n}t=[a+6,". "+da("missing",{symbol:")"})+"."]}else t=[a+5," "+da("(time)")+"."];else t=[a+2,". "+da("expected",{symbol:'+" or "-'})];if(t)throw f(Ta,t[0],da("calculation syntax")+t[1])}function L(e,a,t,r){for(r||(r=!0,e[a][3]="weekday");a<e.length;a++){if(D(e,a,"weekday","[")){var n=[],i=_(e,a+2,function(e,a,t){if(0===e||-5>e||e>5)throw f(Ta,t,da("number -5 to 5"));if(e===a)n.push(e);else{if(!(a>e))throw f(Ta,t+2,da("bad range",{from:e,to:a}));for(var r=e;a>=r;r++){if(0===r||-5>r||r>5)throw f(Ta,t+2,da("number -5 to 5"));n.push(r)}}});if(!D(e,i,"]"))throw f(Ta,i,da("] or more numbers"));var o=Y(e,i+1,6,"constrained weekdays");wa=!1;for(var s=0;s<n.length;s++)t.weekday.push(function(e,a,t){return function(r){var n,i=B(r,!1),o=new Date(r.getFullYear(),r.getMonth(),1),s=new Date(r.getFullYear(),r.getMonth()+1,1);n=P(r.getFullYear(),r.getMonth(),e,[a]);var y=new Date(n.getFullYear(),n.getMonth(),n.getDate()+t);if(y.getTime()<o.getTime()){if(!(n.getTime()>=o.getTime()))return[!1,s];y=k(new Date(r.getFullYear(),r.getMonth()+(a>0?0:1)+1,1),e),n.setDate(y.getDate()+7*(a+(a>0?-1:0))+t)}else if(y.getTime()>=s.getTime()&&n.getTime()>=s.getTime())return[!1,s];var u;if(t>0){if(u=k(new Date(r.getFullYear(),r.getMonth()+(a>0?0:1)-1,1),e),u.setDate(u.getDate()+7*(a+(a>0?-1:0))+t),i===B(u,!1))return[!0,w(r,ea)]}else if(0>t)if(u=k(new Date(r.getFullYear(),r.getMonth()+(a>0?0:1)+1,1),e),u.setDate(u.getDate()+7*(a+(a>0?-1:0))+t),u.getTime()>=s.getTime()){if(y.getTime()>=s.getTime())return[!1,u]}else{if(y.getTime()<s.getTime()&&B(y,!1)===i)return[!0,w(r,ea)];y=u}return r.getDate()===y.getDate()?[!0,w(r,ea)]:r.getDate()<y.getDate()?[!1,y]:[!1,s]}}(e[a][0],n[s],o[0]));a=i+1+o[1]}else{if(!D(e,a,"weekday")){if(D(e,a,"holiday"))return wa=!1,J(e,a,t,!0,r);throw D(e,a-1,",")?f(Ta,a-1,da("additional rule no sense")):f(Ta,a,da("unexpected token weekday range",{token:e[a][1]}))}var y=D(e,a+1,"-","weekday"),u=e[a][0],d=y?e[a+2][0]:u,h=!0;if(u>d){var l=d;d=u-1,u=l+1,h=!1}t.weekday.push(u>d?function(){return[!0]}:function(e,a,t){return function(r){r=new Date(r);var n=r.getDay();return e>n||n>a?[!t,k(r,e)]:[t,k(r,a+1)]}}(u,d,h)),a+=y?3:1}if(!D(e,a,","))break}return a}function Y(e,a,t,r){var n=[0,0];if(n[0]=D(e,a,"+")||(D(e,a,"-")?-1:0),0!==n[0]&&D(e,a+1,"number","calcday")){if(e[a+1][0]>t)throw f(Ta,a+2,da("max differ",{maxdiffer:t,name:r}));n[0]*=e[a+1][0],0!==n[0]||ba||ca.push([Ta,a+2,da("adding 0")]),n[1]=3}else n[0]=0;return n}function J(e,a,t,r,n){for(n||(e[a][3]=r?"weekday":"holiday");a<e.length;a++){if(!D(e,a,"holiday")){if(D(e,a,"weekday"))return L(e,a,t,!0);throw D(e,a-1,",")?f(Ta,a-1,da("additional rule no sense")):f(Ta,a,da("unexpected token holiday",{token:e[a][1]}))}if("PH"===e[a][0]){var i=x(e[a][0]),o=Y(e,a+1,1,"public holiday"),s=function(e,a){return function(t){for(var r=j(e,t.getFullYear(),a),n=B(t,!0),i=0;i<r.length;i++){var o=B(r[i][0],!0);if(o>n){if(a[0]>0){var s=j(e,t.getFullYear()-1,a),y=s[s.length-1],u=B(y[0],!0);if(u>n)return[!1,y[0]];if(n===u)return[!0,w(y[0],ea),"Day after "+y[1]]}return[!1,r[i][0]]}if(n===o)return[!0,new Date(t.getFullYear(),t.getMonth(),t.getDate()+1),(a[0]>0?"Day after ":a[0]<0?"Day before ":"")+r[i][1]]}if(a[0]<0){var d=j(e,t.getFullYear()+1,a),f=d[0],h=B(f[0],!0);if(n===h)return[!0,w(f[0],ea),"Day before "+f[1]]}return[!1,new Date(r[0][0].getFullYear()+1,r[0][0].getMonth(),r[0][0].getDate())]}}(i,o);r?t.weekday.push(s):t.holiday.push(s),a+=1+o[1]}else if("SH"===e[a][0]){var i=x(e[a][0]),s=function(e){return function(a){for(var t=B(a),r=0;r<e.length;r++)for(var n=O(e[r],a.getFullYear()),i=0;i<n.length;i+=4){var o=new Date(a.getFullYear(),n[2+i]-1,n[3+i]+1),s=100*(n[0+i]-1)+n[1+i],y=100*(n[2+i]-1)+n[3+i];o=B(o);var u=s>y;if(s>t){var d=O(e[e.length-1],a.getFullYear()-1,!1);if("object"==typeof d){var f=100*(d[d.length-4]-1)+d[d.length-3],h=100*(d[d.length-2]-1)+d[d.length-1];return f>h&&h>=t?[!0,new Date(a.getFullYear(),d[d.length-2]-1,d[d.length-1]+1),e[e.length-1].name]:[!1,new Date(a.getFullYear(),n[0+i]-1,n[1+i])]}return[!1,new Date(a.getFullYear(),n[0+i]-1,n[1+i])]}if(t>=s&&(o>t||u))return[!0,new Date(a.getFullYear()+u,n[2+i]-1,n[3+i]+1),e[r].name];if(o===t){if(i+4<n.length)return i+=4,[!1,new Date(a.getFullYear(),n[0+i]-1,n[1+i])];if(r+1===e.length){var n=O(e[0],a.getFullYear()+1);return[!1,new Date(a.getFullYear()+!u,n[0+i]-1,n[1+i])]}var n=O(e[r+1],a.getFullYear());return[!1,new Date(a.getFullYear(),n[0]-1,n[1])]}}return[!1]}}(i);r?t.weekday.push(s):t.holiday.push(s),a+=1}if(!D(e,a,","))break}return a}function B(e,a){return(a?1e4*e.getFullYear():0)+100*e.getMonth()+e.getDate()}function O(e,a,t){"boolean"!=typeof t&&(t=!0);var r=e[a];if("undefined"==typeof r&&(r=e["default"],"undefined"==typeof r)){if(t)throw h(da("no SH definition",{name:e.name,year:a,repository_url:ra}));return void 0}return r}function x(e){if("string"==typeof oa){if(r.hasOwnProperty(oa)){if("string"==typeof sa&&r[oa][sa]&&r[oa][sa][e])return r[oa][sa][e];if(r[oa][e]){var a={};for(var t in r[oa][e])"object"==typeof r[oa][e][t][2]?-1!==r[oa][e][t][2].indexOf(sa)&&(a[t]=r[oa][e][t]):a[t]=r[oa][e][t];if(0===Object.keys(a).length)throw h(da("no PH definition",{name:e,cc:oa,repository_url:ra}));return a}throw h(da("no PH definition state",{name:e,cc:oa,state:sa,repository_url:ra}))}throw h(da("no PH definition",{name:e,cc:oa,repository_url:ra}))}throw da("no country code")}function W(e){function a(a,t){var r=new Date(e,a,1);return 1+(7+t-r.getDay())%7}function t(a,t){var r=new Date(e,a+1,0),n=(7+r.getDay()-t)%7;return r.getDate()-n}var r=Math.floor(e/100),n=e-19*Math.floor(e/19),i=Math.floor((r-17)/25),o=r-Math.floor(r/4)-Math.floor((r-i)/3)+19*n+15;o-=30*Math.floor(o/30),o-=Math.floor(o/28)*(1-Math.floor(o/28)*Math.floor(29/(o+1))*Math.floor((21-n)/11));var s=e+Math.floor(e/4)+o+2-r+Math.floor(r/4);s-=7*Math.floor(s/7);var y,u=o-s,d=3+Math.floor((u+40)/44),f=u+28-31*Math.floor(d/4),h=e%4,l=e%7,m=e%19,g=(19*m+15)%30,c=(2*h+4*l-g+34)%7,b=g+c;y=9>b?new Date(e,3,b+4):31>b+4?new Date(e,3,b+4):new Date(e,4,b-26);var p=new Date(e,2,0),D=p.getDate()-p.getDay(),M=new Date(e,4,24),v=24-(6+M.getDay())%7,w=new Date(e,6,1),k=0===w.getDay()?2:1;return{easter:new Date(e,d-1,f),"orthodox easter":y,victoriaDay:new Date(e,4,v),canadaDay:new Date(e,6,k),firstJanuaryMonday:new Date(e,0,a(0,1)),firstFebruaryMonday:new Date(e,1,a(1,1)),lastFebruarySunday:new Date(e,1,D),firstMarchMonday:new Date(e,2,a(2,1)),firstAprilMonday:new Date(e,3,a(3,1)),firstMayMonday:new Date(e,4,a(4,1)),firstJuneMonday:new Date(e,5,a(5,1)),firstJulyMonday:new Date(e,6,a(6,1)),firstAugustMonday:new Date(e,7,a(7,1)),firstSeptemberMonday:new Date(e,8,a(8,1)),firstSeptemberSunday:new Date(e,8,a(8,0)),firstOctoberMonday:new Date(e,9,a(9,1)),firstNovemberMonday:new Date(e,10,a(10,1)),firstMarchTuesday:new Date(e,2,a(2,2)),firstAugustTuesday:new Date(e,7,a(7,2)),firstAugustFriday:new Date(e,7,a(7,5)),firstNovemberThursday:new Date(e,10,a(10,4)),lastMayMonday:new Date(e,4,t(4,1)),lastMarchMonday:new Date(e,2,t(2,1)),lastAprilMonday:new Date(e,3,t(3,1)),lastAprilFriday:new Date(e,3,t(3,5)),lastOctoberFriday:new Date(e,9,t(9,5))}}function j(e,a,t){var r,n=W(a),i=[];for(var o in e){if("string"==typeof e[o][0]){var s=n[e[o][0]];if(!s)throw da("movable no formular",{name:e[o][0]});if(r=new Date(s.getFullYear(),s.getMonth(),s.getDate()+e[o][1]),a!==r.getFullYear())throw da("movable not in year",{name:e[o][0],days:e[o][1]})}else r=new Date(a,e[o][0]-1,e[o][1]);t[0]&&r.setDate(r.getDate()+t[0]),i.push([r,o])}return i=i.sort(function(e,a){return e[0].getTime()<a[0].getTime()?-1:e[0].getTime()>a[0].getTime()?1:0})}function I(e,a){for(e[a][3]="year";a<e.length;a++){if(!D(e,a,"year"))throw D(e,a-1,",")?f(Ta,a-1,da("additional rule no sense")):f(Ta,a,da("unexpected token year range",{token:e[a][1]}));var t,r,n=!1;D(e,a+1,"-","year","/","number")?(n=!0,t=!0,r=parseInt(e[a+4][0]),S(a+4,r,"year")):(n=D(e,a+1,"-","year"),t=D(e,a+1,"/","number"),t?(r=parseInt(e[a+2][0]),S(a+2,r,"year","no_end_year")):D(e,a+1,"+")&&(r=1,t=2));var i=parseInt(e[a][0]);if(n&&e[a+2][0]<=i)throw e[a+2][0]===i?f(Ta,a,da("year range one year",{year:i})):f(Ta,a,da("year range reverse"));if(!n&&i<(new Date).getFullYear()&&ca.push([Ta,a,da("year past")]),n&&e[a+2][0]<(new Date).getFullYear()&&ca.push([Ta,a+2,da("year past")]),Na.year.push(function(e,a,t,r,n,i){return function(o){var s=o.getFullYear(),y=r?parseInt(e[a+2][0]):t;if(t>s)return[!1,new Date(t,0,1)];if(n){if(s>=t){if(r&&s>y)return[!1];if(i>0)return(s-t)%i===0?[!0,new Date(s+1,0,1)]:[!1,new Date(s+i-1,0,1)]}}else if(r){if(y>=s)return[!0,new Date(y+1,0,1)]}else if(s===t)return[!0];return[!1]}}(e,a,i,n,t,r)),a+=1+(n?2:0)+(t?2===t?1:2:0),!D(e,a,","))break}return a}function A(e,a){for(;a<e.length;a++){if(D(e,a,"week")&&a++,!D(e,a,"number"))throw D(e,a-1,",")?f(Ta,a-1,da("additional rule no sense")):f(Ta,a,da("unexpected token week range",{token:e[a][1]}));var t=D(e,a+1,"-","number"),r=0,n=e[a][0],i=t?e[a+2][0]:n;if(n>i)throw f(Ta,a+2,da("week range reverse"));if(1>n)throw f(Ta,a,da("week negative"));if(i>53)throw f(Ta,t?a+2:a,da("week exceed"));if(t&&(r=D(e,a+3,"/","number"))){if(r=e[a+4][0],2>r)throw f(Ta,a+4,da("week period less than 2",{weekfrom:n,weekto:i,period:r}));if(r>26)throw f(Ta,a+4,da("week period greater than 26",{weekfrom:n}))}if(!wa||1>=n&&i>=53&&!r||(wa=!1),Na.week.push(r||1!==n||53!==i?function(e,a,t,r){return function(t){var n=V(t);if(e>n)return[!1,K(e,t)];if(n>a)return[!1,K(e,t)];if(r){var i=(n-e)%r===0;return i?[!0,K(n+1,t)]:[!1,K(n+r-1,t)]}return[!0,K(53===a?1:a+1,t)]}}(n,i,t,r):function(){return[!0]}),a+=1+(t?2:0)+(r?2:0),!D(e,a,","))break}return a}function V(e){e=new Date(+e),e.setHours(0,0,0),e.setDate(e.getDate()+4-(e.getDay()||7));var a=new Date(e.getFullYear(),0,1);return Math.ceil(((e-a)/864e5+1)/7)}function z(e,a){var t=new Date(a,0,1+7*(e-1)),r=t.getDay(),n=t;return n.setDate(4>=r?t.getDate()-t.getDay()+1:t.getDate()+8-t.getDay()),n}function K(e,a){for(var t,r=-1;1>=r;r++)if(t=z(e,a.getFullYear()+r),t.getTime()>a.getTime())return t;throw h()}function E(e,a,t,r){for(r||(e[a][3]="month");a<e.length;a++){if(D(e,a,"month","number")&&!D(e,a+2,"timesep","number"))return G(e,a,Ta,!0);if(!D(e,a,"month"))throw f(Ta,a,da("unexpected token month range",{token:e[a][1]}));var n=D(e,a+1,"-","month"),i=e[a][0],o=n?e[a+2][0]:i;n&&wa?i!==(o+1)%12&&(wa=!1):wa=!1;var s=!0;if(i>o){var y=o;o=i-1,i=y+1,s=!1}var u=function(e,a,t,r,n,i){return function(e){var a=e.getMonth();return t>r?[!i]:t>a||a>r?[!i,R(e,t)]:[i,R(e,r+1)]}}(e,a,i,o,n,s);if(t===!0?Na.monthday.push(u):Na.month.push(u),a+=n?3:1,!D(e,a,","))break}return a}function R(e,a){return new Date(e.getFullYear(),a<e.getMonth()?a+12:a)}function G(e,a,t,r){for(r||(e[a][3]="month");a<e.length;a++){var n=[],i=[],o=[],s=[],y=[];n[0]=D(e,a,"year"),i[0]=D(e,a+n[0],"month","number"),o[0]=D(e,a+n[0],"event"),o[0]&&(s[0]=Y(e,a+n[0]+1,200,"event like easter"));var u;D(e,a+n[0],"month","weekday","[")?(y[0]=T(e,a+n[0]+3),s[0]=Y(e,y[0][1],6,"constrained weekdays"),u=y[0][1]+("object"==typeof s[0]&&s[0][1]?3:0)):u=a+n[0]+(o[0]?"object"==typeof s[0]&&s[0][1]?4:1:2);var d;if((i[0]||o[0]||y[0])&&D(e,u,"-")&&(n[1]=D(e,u+1,"year"),d=u+1+n[1],i[1]=D(e,d,"month","number"),i[1]||(o[1]=D(e,d,"event"),o[1]?s[1]=Y(e,d+1,366,"event like easter"):D(e,d,"month","weekday","[")&&(y[1]=T(e,d+3),s[1]=Y(e,y[1][1],6,"constrained weekdays")))),n[0]===n[1]&&(i[1]||o[1]||y[1])){i[0]&&N(e[a+n[0]][0],e[a+n[0]+1][0],t,a+n[0]+1),i[1]&&N(e[d][0],e[d+1][0],t,d+1);var h=function(e,a,t,r,n,i,o,s){return function(y){var u,d,h=new Date(y.getFullYear()+1,0,1);if(n[0]){if(u=W(r[0]?parseInt(e[a][0]):y.getFullYear()),d=u[e[a+r[0]][0]],"object"==typeof i[0]&&i[0][1]){var l=d.getFullYear();if(d.setDate(d.getDate()+i[0][0]),l!==d.getFullYear())throw f(t,a+r[0]+3*i[0][1],da("movable not in year",{name:e[a+r[0]][0],days:i[0][0]}))}}else d=s[0]?P(r[0]?e[a][0]:y.getFullYear(),e[a+r[0]][0],e[a+r[0]+1][0],s[0],i[0]):new Date(r[0]?e[a][0]:y.getFullYear(),e[a+r[0]][0],e[a+r[0]+1][0]);var m;if(n[1]){if(u=W(r[1]?parseInt(e[o-1][0]):y.getFullYear()),m=u[e[o][0]],"object"==typeof i[1]&&i[1][1]){var g=m.getFullYear();if(m.setDate(m.getDate()+i[1][0]),g!==m.getFullYear())throw f(t,o+i[1][1],da("movable not in year",{name:e[o][0],days:i[1][0]}))}}else m=s[1]?P(r[1]?e[o-1][0]:y.getFullYear(),e[o][0],e[o+1][0],s[1],i[1]):new Date(r[1]?e[o-1][0]:y.getFullYear(),e[o][0],e[o+1][0]+1);var c=!0;if(d>m){var b=m;m=d,d=b,c=!1}return y.getTime()<d.getTime()?[!c,d]:y.getTime()<m.getTime()?[c,m]:r[0]?[!c]:[!c,h]}}(e,a,t,n,o,s,d,y);r===!0?Na.month.push(h):Na.monthday.push(h),a=(y[1]?y[1][1]:d+(o[1]?1:2))+("object"==typeof s[1]?s[1][1]:0)}else if(i[0]){n=n[0];var l=e[a][0],m=e[a+n][0],g=!0;do{var c=e[a+1+n][0],b=D(e,a+2+n,"-","number"),p=void 0,M=e[a+n+(b?3:1)][0]+1;if(b&&D(e,a+n+4,"/","number")&&(p=e[a+n+5][0],S(a+n+5,p,"day")),g){var v=a+n+1+(b?2:0)+(p?2:0)+!(b||p);if(D(e,v,"timesep","number")&&(D(e,v+2,"+")||D(e,v+2,"-")||0!==fa))return E(e,a,!0,!0)}if(c>M)throw f(t,a+n+3,da("day range reverse"));N(m,c,t,a+1+n),N(m,M-1,t,a+n+(b?3:1));var h=function(e,a,t,r,n,i){return function(o){var s=new Date(o.getFullYear()+1,0,1),y=new Date(a?e:o.getFullYear(),t,r);if(1===t&&r!==y.getDate())return[!1];var u=new Date(y.getFullYear(),t,n);if(1===t&&b&&n!==u.getDate())return[!1];if(o.getTime()<y.getTime())return[!1,y];if(o.getTime()>=u.getTime())return[!1,s];if(!i)return[!0,u];var d=Math.floor((o.getTime()-y.getTime())/aa),f=d%i;return 0===f?[!0,new Date(o.getFullYear(),o.getMonth(),o.getDate()+1)]:[!1,new Date(o.getFullYear(),o.getMonth(),o.getDate()+i-f)]}}(l,n,m,c,M,p);r===!0?Na.month.push(h):Na.monthday.push(h),a+=2+n+(b?2:0)+(p?2:0),g=!1}while(D(e,a,",","number"))}else if(o[0]){var h=function(e,a,t,r,n){return function(i){var o=W(r?e[a][0]:i.getFullYear()),s=o[e[a+r][0]];if(!s)throw da("movable no formular",{name:e[a+r][0]});if(n[0]&&(s.setDate(s.getDate()+n[0]),i.getFullYear()!==s.getFullYear()))throw f(t,a+r+n[1],da("movable not in year",{name:e[a+r][0],days:n[0]}));return i.getTime()<s.getTime()?[!1,s]:100*s.getMonth()+s.getDate()===100*i.getMonth()+i.getDate()?[!0,new Date(i.getFullYear(),i.getMonth(),i.getDate()+1)]:[!1,new Date(i.getFullYear()+1,0,1)]}}(e,a,t,n[0],s[0]);r===!0?Na.month.push(h):Na.monthday.push(h),a+=n[0]+o[0]+("number"==typeof s[0][1]&&s[0][1]?3:0)}else{if(!y[0])return D(e,a,"month")?E(e,a,!0,!0):a;a=E(e,a)}if(!D(e,a,","))break}return a}function U(e,a,t,r,n){for(var i="",o=a;t>=o;)D(e,o,"weekday")?(!n.leave_weekday_sep_one_day_betw&&o-a>1&&(D(e,o-1,",")||D(e,o-1,"-"))&&D(e,o-2,"weekday")&&e[o][0]===(e[o-2][0]+1)%7&&(i=i.substring(0,i.length-1)+n.sep_one_day_between),i+=Q[e[o][0]]):o-a>0&&"time"===r&&D(e,o-1,"timesep")&&D(e,o,"number")?i+=(e[o][0]<10?"0":"")+e[o][0].toString():"time"===r&&n.zero_pad_hour&&o!==e.length&&D(e,o,"number")&&D(e,o+1,"timesep")?i+=(e[o][0]<10?0===e[o][0]&&n.one_zero_if_hour_zero?"":"0":"")+e[o][0].toString():"time"===r&&t>=o+2&&D(e,o,"number")&&D(e,o+1,"-")&&D(e,o+2,"number")?(i+=(e[o][0]<10?0===e[o][0]&&n.one_zero_if_hour_zero?"":"0":"")+e[o][0].toString(),i+=":00-"+(e[o+2][0]<10?"0":"")+e[o+2][0].toString()+":00",o+=2):D(e,o,"comment")?i+='"'+e[o][0].toString()+'"':D(e,o,"closed")?i+=n.leave_off_closed?e[o][0]:n.keyword_for_off_closed:o-a>0&&D(e,o,"number")&&(D(e,o-1,"month")&&"month"===r||D(e,o-1,"week")&&"week"===r)?i+=" "+(n.zero_pad_month_and_week_numbers&&e[o][0]<10?"0":"")+e[o][0]:o-a>0&&D(e,o,"month")&&D(e,o-1,"year")?i+=" "+$[[e[o][0]]]:o-a>0&&D(e,o,"event")&&D(e,o-1,"year")?i+=" "+e[o][0]:D(e,o,"month")?(i+=$[[e[o][0]]],t>=o+1&&D(e,o+1,"weekday")&&(i+=" ")):t>=o+2&&(D(e,o,"-")||D(e,o,"+"))&&D(e,o+1,"number","calcday")?(i+=" "+e[o][0]+e[o+1][0]+" day"+(1===Math.abs(e[o+1][0])?"":"s"),o+=2):o===t&&"weekday"===r&&":"===e[o][0]||(i+=e[o][0].toString()),o++;
return i}var q={dawn:330,sunrise:360,sunset:1080,dusk:1110},$=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],Q=["Su","Mo","Tu","We","Th","Fr","Sa"],Z={zero_pad_hour:!0,one_zero_if_hour_zero:!1,leave_off_closed:!0,keyword_for_off_closed:"off",rule_sep_string:" ",print_semicolon:!0,leave_weekday_sep_one_day_betw:!0,sep_one_day_between:",",zero_pad_month_and_week_numbers:!1,locale:"en"},X={opening_hours:{mode:0,warn_for_PH_missing:!0},collection_times:{mode:2},"opening_hours:.+":{mode:0},".+:opening_hours":{mode:0},".+:opening_hours:.+":{mode:0},smoking_hours:{mode:0},service_times:{mode:2},happy_hours:{mode:0},lit:{mode:0,map:{yes:'sunset-sunrise open "specified as yes: At night (unknown time schedule or daylight detection)"',automatic:'unknown "specified as automatic: When someone enters the way the lights are turned on."',no:'off "specified as no: There are no lights installed."',interval:'unknown "specified as interval"',limited:'unknown "specified as limited"'}}},ea=1440,aa=6e4*ea,ta="opening_hours.js",ra="https://github.com/ypid/"+ta,na=ra+"/issues?state=open",ia="en";"object"==typeof t&&(ia=t.lng());var oa,sa,ya,ua,da=function(e,a){if("object"==typeof t&&"function"==typeof t.t&&"string"==typeof ia&&-1!==["de"].indexOf(ia)){var r=t.lng();r!==ia&&t.setLng(ia);var n=t.t("opening_hours:texts."+e,a);return r!==ia&&t.setLng(r),n}var n=i[e];return"undefined"==typeof n&&(n=e),n.replace(/__([^_]*)__/g,function(e,t){return"undefined"!=typeof a[t]?a[t]:e})};if("object"==typeof s&&null!==s)"object"==typeof s.address&&("string"==typeof s.address.country_code&&(oa=s.address.country_code),"string"==typeof s.address.state?sa=s.address.state:"string"==typeof s.address.county&&(sa=s.address.county)),"string"==typeof s.lon&&"string"==typeof s.lat&&(ya=s.lat,ua=s.lon);else if(null===s)oa="de",sa="Baden-Württemberg",ya="49.5400039",ua="9.7937133";else if("undefined"!=typeof s)throw"The nominatiomJSON parameter is of unknown type. Given "+typeof s+", expected object.";var fa,ha,la,ma=4,ga=!1;if("number"==typeof y)fa=y;else if("object"==typeof y){if(ia=y.locale,d("mode","number")&&(fa=y.mode),d("warnings_severity","number")&&(ma=y.warnings_severity,-1===[0,1,2,3,4,5,6,7].indexOf(ma)))throw da("warnings severity",{severity:ma,allowed:"[ 0, 1, 2, 3, 4, 5, 6, 7 ]"});d("tag_key","string")&&(ha=y.tag_key),d("map_value","boolean")&&(ga=!0)}else if("undefined"!=typeof y)throw da("optional conf parm type",{given:typeof y});if("string"==typeof ha)la=u(ha),ga&&"object"==typeof X[la].map&&"string"==typeof X[la].map[o]&&(o=X[la].map[o]);else if(ga)throw da("conf param tag key missing");if("undefined"==typeof fa)fa="string"==typeof ha&&"number"==typeof X[la].mode?X[la].mode:0;else if(0!==fa&&1!==fa&&2!==fa)throw da("conf param mode invalid",{given:fa,allowed:"[ 0, 1, 2 ]"});if("string"!=typeof o)throw da("no string");if(o.match(/^(?:\s*;?\s*)+$/))throw da("nothing");for(var ca=[],ba=!1,pa=!1,Da=!1,Ma=l(o),va="",wa=!0,ka=[],_a=[],Ta=0;Ta<Ma.length;Ta++)if(0!==Ma[Ta][0].length){var Sa=0,Pa=!1;do{if(Sa===Ma[Ta][0].length)break;var Na={time:[],wraptime:[],weekday:[],holiday:[],week:[],month:[],monthday:[],year:[],date:[],fallback:Ma[Ta][1],additional:Sa?!0:!1,meaning:!0,unknown:!1,comment:void 0,build_from_token_rule:void 0};Na.build_from_token_rule=[Ta,Sa,_a.length],Sa=v(Ma[Ta][0],Sa,Na,Ta),Sa="object"==typeof Sa?Sa[0]:0,_a.push([Ma[Ta][0].slice(Na.build_from_token_rule[1],0===Sa?Ma[Ta][0].length:Sa),Ma[Ta][1],Ma[Ta][2]]),Pa&&_a.length>1&&_a[_a.length-1][0].unshift(_a[_a.length-2][0].pop()),Pa=0===Sa?!1:!0;var Ha=["year","holiday","month","monthday","week","weekday"];for(var Ca in Ha)Na[Ha[Ca]].length>0&&(Na.date.push(Na[Ha[Ca]]),Na[Ha[Ca]]=[]);if(ka.push(Na),Na.wraptime.length>0){for(var Fa={time:Na.wraptime,date:[],meaning:Na.meaning,unknown:Na.unknown,comment:Na.comment,wrapped:!0,build_from_token_rule:Na.build_from_token_rule},La=0;La<Na.date.length;La++){Fa.date.push([]);for(var Ya=0;Ya<Na.date[La].length;Ya++)Fa.date[Fa.date.length-1].push(M(Na.date[La][Ya],-aa))}ka.push(Fa)}}while(Sa)}else ca.push([Ta,-1,da("nothing useful")+(Ta===Ma.length-1&&Ta>0&&!Ma[Ta][1]?" "+da("programmers joke"):"")]);this.getStatePair=function(e){for(var a,t,r,n=!1,i=!1,o=[],s=0;s<ka.length;s++){for(var y=!0,u=0;u<ka[s].date.length;u++){for(var d=ka[s].date[u],f=!1,h=0;h<d.length;h++){var l=d[h](e);l[0]&&(f=!0,"string"==typeof l[2]&&(t=[l[2],s])),("undefined"==typeof a||"object"==typeof l[1]&&l[1].getTime()<a.getTime())&&(a=l[1])}if(!f){y=!1;break}}y&&(!(ka[s].date.length>0||s>0&&ka[s].meaning&&0===ka[s-1].date.length)||!ka[s].meaning&&!ka[s].unknown||ka[s].wrapped||ka[s].additional||ka[s].fallback||(o=[]),o.push(s))}for(var s=0;s<o.length;s++){var m=o[s];0===ka[m].time.length&&(!ka[m].fallback||ka[m].fallback&&!n&&!i)&&(n=ka[m].meaning,i=ka[m].unknown,r=m);for(var g=0;g<ka[m].time.length;g++){var l=ka[m].time[g](e);if(l[0]&&(!ka[m].fallback||ka[m].fallback&&!n&&!i)){if(n=ka[m].meaning,i=ka[m].unknown,r=m,"object"==typeof t&&t[0]===da("open end")&&(t=void 0),l[2]===!0&&(n||i)){if(t=[da("open end"),r],n=!1,i=!0,"function"==typeof ka[m].time[g+1]){var c=ka[m].time[g+1](e);!c[0]&&"object"==typeof c[1]&&ka[m].time[g](new Date(e.getTime()-1))[0]&&(n=!1,i=!1)}}ka[m].fallback&&("undefined"==typeof a||"undefined"!=typeof l[1]&&l[1]<a)&&(a=l[1])}("undefined"==typeof a||"object"==typeof l[1]&&l[1]<a)&&(a=l[1])}}return"object"==typeof ka[r]&&"string"==typeof ka[r].comment?t=ka[r].comment:"object"==typeof t&&(t=t[1]===r?t[0]:void 0),[n,a,i,t,r]},this.getState=function(e){var a=this.getIterator(e);return a.getState()},this.getUnknown=function(e){var a=this.getIterator(e);return a.getUnknown()},this.getStateString=function(e,a){var t=this.getIterator(e);return t.getStateString(a)},this.getComment=function(e){var a=this.getIterator(e);return a.getComment()},this.getMatchingRule=function(e){var a=this.getIterator(e);return a.getMatchingRule()},this.getWarnings=function(){var e=this.getIterator();return g(e)},this.prettifyValue=function(e){return this.getWarnings(),p(e)},this.getNextChange=function(e,a){var t=this.getIterator(e);return t.advance(a)?t.getDate():void 0},this.isWeekStable=function(){return wa},this.isEqualTo=function(e,a){if("undefined"==typeof t)var a=new Date;var t;t=new Date(this.isWeekStable()&&e.isWeekStable()?a.getTime()+10*aa:a.getTime()+366*aa*5);for(var r=this.getIterator(a),n=e.getIterator(a);r.advance(t);){n.advance(t);var i=[];if(r.getDate().getTime()!==n.getDate().getTime()&&i.push("getDate"),r.getState()!==n.getState()&&i.push("getState"),r.getUnknown()!==n.getUnknown()&&i.push("getUnknown"),r.getComment()!==n.getComment()&&i.push("getComment"),i.length){var o={};return o[r.getDate().getTime()]=i,[!1,{matching_rule:r.getMatchingRule(),matching_rule_other:n.getMatchingRule(),deviation_for_time:o}]}}return[!0]},this.getOpenIntervals=function(e,a){var t=[],r=this.getIterator(e);for((r.getState()||r.getUnknown())&&t.push([e,void 0,r.getUnknown(),r.getComment()]);r.advance(a);)r.getState()||r.getUnknown()?(0!==t.length&&"undefined"==typeof t[t.length-1][1]&&(t[t.length-1][1]=r.getDate()),t.push([r.getDate(),void 0,r.getUnknown(),r.getComment()])):0!==t.length&&"undefined"==typeof t[t.length-1][1]&&(t[t.length-1][1]=r.getDate());return t.length>0&&"undefined"==typeof t[t.length-1][1]&&(t[t.length-1][1]=a),t},this.getOpenDuration=function(e,a){for(var t=0,r=0,n=this.getIterator(e),i=n.getState()||n.getUnknown()?e:void 0,o=n.getState(),s=n.getUnknown();n.advance(a);)n.getState()||n.getUnknown()?("object"==typeof i&&(s?r+=n.getDate().getTime()-i.getTime():o&&(t+=n.getDate().getTime()-i.getTime())),i=n.getDate(),o=n.getState(),s=n.getUnknown()):"object"==typeof i&&(s?r+=n.getDate().getTime()-i.getTime():t+=n.getDate().getTime()-i.getTime(),i=void 0);return"object"==typeof i&&(s?r+=a.getTime()-i.getTime():t+=a.getTime()-i.getTime()),[t,r]},this.getIterator=function(e){return new function(a){"undefined"==typeof e&&(e=new Date);var t=[void 0,e,void 0,void 0,void 0],r=a.getStatePair(e);this.getDate=function(){return t[1]},this.setDate=function(e){if("object"!=typeof e)throw da("date parameter needed");t=[void 0,e,void 0,void 0,void 0],r=a.getStatePair(e)},this.getState=function(){return r[0]},this.getUnknown=function(){return r[2]},this.getStateString=function(e){return r[0]?"open":r[2]?"unknown":e?"closed":"close"},this.getComment=function(){return r[3]},this.getMatchingRule=function(){return"undefined"==typeof r[4]?void 0:ka[r[4]].build_from_token_rule[2]},this.advance=function(e){if("undefined"==typeof e)e=new Date(t[1].getTime()+366*aa*5);else if(e.getTime()<=t[1].getTime())return!1;do{if("undefined"==typeof r[1])return!1;if(r[1].getTime()<=t[1].getTime())throw"Fatal: infinite loop in nextChange";if(r[1].getTime()>=e.getTime())return!1;t=r,r=a.getStatePair(t[1])}while(r[0]===t[0]&&r[2]===t[2]&&r[3]===t[3]);return!0}}(this)}}});